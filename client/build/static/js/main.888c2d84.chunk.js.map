{"version":3,"sources":["utils/accessToken.ts","generated/graphql.tsx","components/Loading/Loading.tsx","utils/theme.ts","pages/Home.tsx","schemas /registerValidationSchema.ts","components/Forms/FormTextField.tsx","components/Alerts/AlertMessage.tsx","components/Register/Register.style.ts","components/Register/Register.tsx","schemas /loginValidationSchema.ts","components/Login/Login.style.ts","components/Login/Login.tsx","components/Charts/Chart.tsx","components/Typography/Title.tsx","assets/world.svg","assets/flag.svg","assets/uk.svg","utils/currencies.ts","components/Accounts/styles/Accounts.style.ts","components/cards/AccountsCard.tsx","components/Dialog/Dialog.tsx","assets/mc_symbol.svg","components/cards/ApolloCard.tsx","components/Accounts/Accounts.tsx","components/Accounts/styles/Account.style.ts","components/styles/cards/TransactionCard.style.ts","components/cards/TransactionCard.tsx","components/Accounts/Account.tsx","components/Toolbar/Toolbar.style.ts","components/SideDrawer/DrawerToggleButton.style.ts","components/SideDrawer/DrawerToggleButton.tsx","components/Toolbar/Toolbar.tsx","components/SideDrawer/SideDrawer.style.ts","components/SideDrawer/SideDrawer.tsx","components/Backdrop/Backdrop.style.ts","components/Backdrop/Backdrop.tsx","Routes.tsx","index.tsx","App.tsx"],"names":["accessToken","getAccessToken","setAccessToken","token","AccountsDocument","gql","AddMoneyDocument","CardsDocument","useCardsQuery","baseOptions","ApolloReactHooks","CreateAccountDocument","CreateCardDocument","CreateTransactionDocument","LoginDocument","LogoutDocument","useLogoutMutation","MeDocument","useMeQuery","RegisterDocument","TransactionsDocument","useTransactionsQuery","UsersDocument","ColorScheme","Loading","style","display","justifyContent","src","alt","height","Home","data","fetchPolicy","users","map","x","key","id","email","firstName","lastName","theme","createMuiTheme","palette","primary","main","PRIMARY","secondary","ORANGE","info","MAROON","contrastThreshold","tonalOffset","registerValidationSchema","yup","required","streetAddres","postCode","city","country","password","value","min","confirmPassword","oneOf","dateOfBirth","FormTextField","placeholder","className","type","props","useField","field","meta","errorText","error","touched","ThemeProvider","TextField","variant","helperText","AlertMessage","message","Alert","severity","useRegisterStyles","makeStyles","root","margin","top","width","headerText","textAlign","fontWeight","alignedFormContent","marginTop","alignedFormField","formField","formButton","textTransform","letterSpacing","loginText","margintop","spacer","Register","history","register","useState","alertMessage","setAlertMessage","classes","length","initialValues","validationSchema","onSubmit","a","setSubmitting","resetForm","variables","streetAddress","response","push","isSubmitting","onChange","name","Button","disabled","color","href","loginValidationSchema","useLoginStyles","registerText","Login","login","update","store","writeQuery","query","me","user","errorMessage","split","Chart","currency","dates","sortedDates","currentDate","moment","useEffect","transactions","forEach","transaction","parsedDate","Date","parse","date","sort","b","getTime","isSame","toLocaleDateString","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","amount","options","legend","title","text","Title","Typography","fontSize","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref","svgRef","y","viewBox","enableBackground","xmlSpace","ref","cx","cy","r","points","ForwardRef","forwardRef","d","Currency","useAccountsStyles","content","flexGrow","overflow","container","paddingTop","spacing","paddingBottom","paper","padding","flexDirection","borderRadius","fixedHeight","accountCardHeight","chart","AccountsCard","svg","currencyIcon","fullCurrencyText","balance","iban","onAccountClicked","alignItems","IconButton","onClick","component","Divider","light","NoAccountsCard","onCreateNewAccountClicked","startIcon","useDialogStyles","createUseStyles","dialog","maxWidth","position","left","transform","zIndex","closeButton","marginBottom","cursor","border","alignSelf","Dialog","children","isOpen","onClose","undefined","ApolloCard","cardNumber","validThru","cvv","role","aria-label","NoApolloCard","onCreateNewCardClicked","currencies","Accounts","loading","cards","useCreateAccountMutation","createAccount","useCreateCardMutation","createCard","totalBalance","setTotalBalance","openDialog","setOpenDialog","useHistory","accountCardHeightPaper","chartPaper","accounts","account","console","log","handleCreateNewCardClicked","e","preventDefault","refetchQueries","List","c","ListItem","button","ListItemIcon","determineCurrencyIcon","ListItemText","Container","Grid","item","xs","md","lg","Paper","EURO","DOLLAR","POUND","BITCOIN","pathname","state","handleAccountClicked","card","expiresIn","getMonth","getFullYear","toString","substr","useAccountStyles","accountBalance","accountInfo","accountButtonsSection","accountButton","WHITE","accountButtonSection","accountButtonText","transactionsHeader","transactionCards","dialogButton","useTransactionCardStyles","createStyles","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","expandedText","TransactionCard","time","fee","expanded","setExpanded","Card","CardHeader","avatar","Avatar","subheader","CardActions","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","borderBottom","Transactions","index","transactionType","Account","createTransaction","useAddMoneyMutation","addMoney","location","setAccountBalance","openAddDialog","setOpenAddDialog","openExchangeDialog","setOpenExchangeDialog","openDetailsDialog","setOpenDetailsDialog","currencyFullText","simulate","parseInt","bic","renderDetailsDialog","right","useToolbarStyles","toolbar","navigation","logo","textDecoration","toggleButton","navigationItems","listStyle","SECONDARY","navButton","HOVER","outline","flex","useDrawerToggleButtonStyles","background","boxSizing","toggleButtonLine","DrawerToggleButton","click","Toolbar","logout","client","showAuthUserButtons","setShowAuthUserButtons","drawerClickHandler","routeTo","then","resetStore","useSideDrawerStyles","siderDrawer","boxShadow","open","authUserNavigationItems","nonAuthUserNavigationItems","SideDrawer","showAuthUserNavigationItems","setShowAuthUserNavigationItems","drawerClasses","show","logOutClicked","useBackdropStyles","backdrop","Backdrop","AuthenticatedRoute","Component","rest","render","to","LoggedInRoute","Routes","sideDrawerOpen","setSideDrawerOpen","Helmet","exact","path","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","setContext","headers","authorization","subscribe","next","bind","complete","catch","unsubscribe","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","exp","jwtDecode","now","fetchAccessToken","fetch","process","method","credentials","handleFetch","handleError","err","warn","onError","graphQLErrors","networkError","HttpLink","uri","ReactDOM","setLoading","res","json","document","getElementById"],"mappings":"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","file":"static/js/main.888c2d84.chunk.js","sourcesContent":["export let accessToken = '';\n\nexport const getAccessToken = () => {\n    return accessToken;\n};\n\nexport const setAccessToken = (token: string) => {\n    accessToken = token;\n};\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n  DateTime: any,\n};\n\nexport type Account = {\n   __typename?: 'Account',\n  id: Scalars['Int'],\n  sortCode: Scalars['String'],\n  iban: Scalars['String'],\n  bic: Scalars['String'],\n  currency: Scalars['String'],\n  balance: Scalars['Float'],\n};\n\nexport type Card = {\n   __typename?: 'Card',\n  id: Scalars['Int'],\n  cardNumber: Scalars['String'],\n  pin: Scalars['Float'],\n  expiresIn: Scalars['DateTime'],\n  cvv: Scalars['Float'],\n  monthlySpendingLimit: Scalars['Float'],\n};\n\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  accessToken: Scalars['String'],\n  user: User,\n};\n\nexport type Mutation = {\n   __typename?: 'Mutation',\n  logout: Scalars['Boolean'],\n  revokeRefreshTokensForUser: Scalars['Boolean'],\n  login: LoginResponse,\n  register: Scalars['Boolean'],\n  addMoney: Scalars['Float'],\n  createAccount: Scalars['Boolean'],\n  createTransaction: Scalars['Boolean'],\n  createCard: Scalars['Boolean'],\n};\n\n\nexport type MutationRevokeRefreshTokensForUserArgs = {\n  userId: Scalars['Int']\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationRegisterArgs = {\n  country: Scalars['String'],\n  city: Scalars['String'],\n  postCode: Scalars['String'],\n  streetAddress: Scalars['String'],\n  dateOfBirth: Scalars['String'],\n  lastName: Scalars['String'],\n  firsName: Scalars['String'],\n  password: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationAddMoneyArgs = {\n  currency: Scalars['String'],\n  amount: Scalars['Float']\n};\n\n\nexport type MutationCreateAccountArgs = {\n  currency: Scalars['String']\n};\n\n\nexport type MutationCreateTransactionArgs = {\n  currency: Scalars['String']\n};\n\nexport type Query = {\n   __typename?: 'Query',\n  hello: Scalars['String'],\n  bye: Scalars['String'],\n  users: Array<User>,\n  me?: Maybe<User>,\n  accounts: Array<Account>,\n  transactions: Array<Transaction>,\n  cards: Array<Card>,\n};\n\n\nexport type QueryTransactionsArgs = {\n  currency: Scalars['String']\n};\n\nexport type Transaction = {\n   __typename?: 'Transaction',\n  id: Scalars['Int'],\n  transactionType: Scalars['String'],\n  date: Scalars['DateTime'],\n  amount: Scalars['String'],\n};\n\nexport type User = {\n   __typename?: 'User',\n  id: Scalars['Int'],\n  email: Scalars['String'],\n  firstName: Scalars['String'],\n  lastName: Scalars['String'],\n};\n\nexport type AccountsQueryVariables = {};\n\n\nexport type AccountsQuery = (\n  { __typename?: 'Query' }\n  & { accounts: Array<(\n    { __typename?: 'Account' }\n    & Pick<Account, 'id' | 'balance' | 'currency' | 'sortCode' | 'iban' | 'bic'>\n  )> }\n);\n\nexport type AddMoneyMutationVariables = {\n  amount: Scalars['Float'],\n  currency: Scalars['String']\n};\n\n\nexport type AddMoneyMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'addMoney'>\n);\n\nexport type ByeQueryVariables = {};\n\n\nexport type ByeQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'bye'>\n);\n\nexport type CardsQueryVariables = {};\n\n\nexport type CardsQuery = (\n  { __typename?: 'Query' }\n  & { cards: Array<(\n    { __typename?: 'Card' }\n    & Pick<Card, 'id' | 'cardNumber' | 'pin' | 'expiresIn' | 'cvv' | 'monthlySpendingLimit'>\n  )> }\n);\n\nexport type CreateAccountMutationVariables = {\n  currency: Scalars['String']\n};\n\n\nexport type CreateAccountMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'createAccount'>\n);\n\nexport type CreateCardMutationVariables = {};\n\n\nexport type CreateCardMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'createCard'>\n);\n\nexport type CreateTransactionMutationVariables = {\n  currency: Scalars['String']\n};\n\n\nexport type CreateTransactionMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'createTransaction'>\n);\n\nexport type HelloQueryVariables = {};\n\n\nexport type HelloQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'hello'>\n);\n\nexport type LoginMutationVariables = {\n  email: Scalars['String'],\n  password: Scalars['String']\n};\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'accessToken'>\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'email' | 'firstName' | 'lastName'>\n    ) }\n  ) }\n);\n\nexport type LogoutMutationVariables = {};\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type MeQueryVariables = {};\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'firstName' | 'lastName'>\n  )> }\n);\n\nexport type RegisterMutationVariables = {\n  email: Scalars['String'],\n  password: Scalars['String'],\n  firstName: Scalars['String'],\n  lastName: Scalars['String'],\n  dateOfBirth: Scalars['String'],\n  streetAddress: Scalars['String'],\n  postCode: Scalars['String'],\n  city: Scalars['String'],\n  country: Scalars['String']\n};\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'register'>\n);\n\nexport type TransactionsQueryVariables = {\n  currency: Scalars['String']\n};\n\n\nexport type TransactionsQuery = (\n  { __typename?: 'Query' }\n  & { transactions: Array<(\n    { __typename?: 'Transaction' }\n    & Pick<Transaction, 'id' | 'transactionType' | 'date' | 'amount'>\n  )> }\n);\n\nexport type UsersQueryVariables = {};\n\n\nexport type UsersQuery = (\n  { __typename?: 'Query' }\n  & { users: Array<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'firstName' | 'lastName'>\n  )> }\n);\n\n\nexport const AccountsDocument = gql`\n    query Accounts {\n  accounts {\n    id\n    balance\n    currency\n    sortCode\n    iban\n    bic\n  }\n}\n    `;\n\n/**\n * __useAccountsQuery__\n *\n * To run a query within a React component, call `useAccountsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAccountsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAccountsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useAccountsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<AccountsQuery, AccountsQueryVariables>) {\n        return ApolloReactHooks.useQuery<AccountsQuery, AccountsQueryVariables>(AccountsDocument, baseOptions);\n      }\nexport function useAccountsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<AccountsQuery, AccountsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<AccountsQuery, AccountsQueryVariables>(AccountsDocument, baseOptions);\n        }\nexport type AccountsQueryHookResult = ReturnType<typeof useAccountsQuery>;\nexport type AccountsLazyQueryHookResult = ReturnType<typeof useAccountsLazyQuery>;\nexport type AccountsQueryResult = ApolloReactCommon.QueryResult<AccountsQuery, AccountsQueryVariables>;\nexport const AddMoneyDocument = gql`\n    mutation AddMoney($amount: Float!, $currency: String!) {\n  addMoney(amount: $amount, currency: $currency)\n}\n    `;\nexport type AddMoneyMutationFn = ApolloReactCommon.MutationFunction<AddMoneyMutation, AddMoneyMutationVariables>;\n\n/**\n * __useAddMoneyMutation__\n *\n * To run a mutation, you first call `useAddMoneyMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddMoneyMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addMoneyMutation, { data, loading, error }] = useAddMoneyMutation({\n *   variables: {\n *      amount: // value for 'amount'\n *      currency: // value for 'currency'\n *   },\n * });\n */\nexport function useAddMoneyMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<AddMoneyMutation, AddMoneyMutationVariables>) {\n        return ApolloReactHooks.useMutation<AddMoneyMutation, AddMoneyMutationVariables>(AddMoneyDocument, baseOptions);\n      }\nexport type AddMoneyMutationHookResult = ReturnType<typeof useAddMoneyMutation>;\nexport type AddMoneyMutationResult = ApolloReactCommon.MutationResult<AddMoneyMutation>;\nexport type AddMoneyMutationOptions = ApolloReactCommon.BaseMutationOptions<AddMoneyMutation, AddMoneyMutationVariables>;\nexport const ByeDocument = gql`\n    query Bye {\n  bye\n}\n    `;\n\n/**\n * __useByeQuery__\n *\n * To run a query within a React component, call `useByeQuery` and pass it any options that fit your needs.\n * When your component renders, `useByeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useByeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useByeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<ByeQuery, ByeQueryVariables>) {\n        return ApolloReactHooks.useQuery<ByeQuery, ByeQueryVariables>(ByeDocument, baseOptions);\n      }\nexport function useByeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<ByeQuery, ByeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<ByeQuery, ByeQueryVariables>(ByeDocument, baseOptions);\n        }\nexport type ByeQueryHookResult = ReturnType<typeof useByeQuery>;\nexport type ByeLazyQueryHookResult = ReturnType<typeof useByeLazyQuery>;\nexport type ByeQueryResult = ApolloReactCommon.QueryResult<ByeQuery, ByeQueryVariables>;\nexport const CardsDocument = gql`\n    query Cards {\n  cards {\n    id\n    cardNumber\n    pin\n    expiresIn\n    cvv\n    monthlySpendingLimit\n  }\n}\n    `;\n\n/**\n * __useCardsQuery__\n *\n * To run a query within a React component, call `useCardsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCardsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCardsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCardsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<CardsQuery, CardsQueryVariables>) {\n        return ApolloReactHooks.useQuery<CardsQuery, CardsQueryVariables>(CardsDocument, baseOptions);\n      }\nexport function useCardsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<CardsQuery, CardsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<CardsQuery, CardsQueryVariables>(CardsDocument, baseOptions);\n        }\nexport type CardsQueryHookResult = ReturnType<typeof useCardsQuery>;\nexport type CardsLazyQueryHookResult = ReturnType<typeof useCardsLazyQuery>;\nexport type CardsQueryResult = ApolloReactCommon.QueryResult<CardsQuery, CardsQueryVariables>;\nexport const CreateAccountDocument = gql`\n    mutation CreateAccount($currency: String!) {\n  createAccount(currency: $currency)\n}\n    `;\nexport type CreateAccountMutationFn = ApolloReactCommon.MutationFunction<CreateAccountMutation, CreateAccountMutationVariables>;\n\n/**\n * __useCreateAccountMutation__\n *\n * To run a mutation, you first call `useCreateAccountMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAccountMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAccountMutation, { data, loading, error }] = useCreateAccountMutation({\n *   variables: {\n *      currency: // value for 'currency'\n *   },\n * });\n */\nexport function useCreateAccountMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateAccountMutation, CreateAccountMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateAccountMutation, CreateAccountMutationVariables>(CreateAccountDocument, baseOptions);\n      }\nexport type CreateAccountMutationHookResult = ReturnType<typeof useCreateAccountMutation>;\nexport type CreateAccountMutationResult = ApolloReactCommon.MutationResult<CreateAccountMutation>;\nexport type CreateAccountMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateAccountMutation, CreateAccountMutationVariables>;\nexport const CreateCardDocument = gql`\n    mutation createCard {\n  createCard\n}\n    `;\nexport type CreateCardMutationFn = ApolloReactCommon.MutationFunction<CreateCardMutation, CreateCardMutationVariables>;\n\n/**\n * __useCreateCardMutation__\n *\n * To run a mutation, you first call `useCreateCardMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateCardMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createCardMutation, { data, loading, error }] = useCreateCardMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useCreateCardMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateCardMutation, CreateCardMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateCardMutation, CreateCardMutationVariables>(CreateCardDocument, baseOptions);\n      }\nexport type CreateCardMutationHookResult = ReturnType<typeof useCreateCardMutation>;\nexport type CreateCardMutationResult = ApolloReactCommon.MutationResult<CreateCardMutation>;\nexport type CreateCardMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateCardMutation, CreateCardMutationVariables>;\nexport const CreateTransactionDocument = gql`\n    mutation CreateTransaction($currency: String!) {\n  createTransaction(currency: $currency)\n}\n    `;\nexport type CreateTransactionMutationFn = ApolloReactCommon.MutationFunction<CreateTransactionMutation, CreateTransactionMutationVariables>;\n\n/**\n * __useCreateTransactionMutation__\n *\n * To run a mutation, you first call `useCreateTransactionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTransactionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTransactionMutation, { data, loading, error }] = useCreateTransactionMutation({\n *   variables: {\n *      currency: // value for 'currency'\n *   },\n * });\n */\nexport function useCreateTransactionMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateTransactionMutation, CreateTransactionMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateTransactionMutation, CreateTransactionMutationVariables>(CreateTransactionDocument, baseOptions);\n      }\nexport type CreateTransactionMutationHookResult = ReturnType<typeof useCreateTransactionMutation>;\nexport type CreateTransactionMutationResult = ApolloReactCommon.MutationResult<CreateTransactionMutation>;\nexport type CreateTransactionMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateTransactionMutation, CreateTransactionMutationVariables>;\nexport const HelloDocument = gql`\n    query Hello {\n  hello\n}\n    `;\n\n/**\n * __useHelloQuery__\n *\n * To run a query within a React component, call `useHelloQuery` and pass it any options that fit your needs.\n * When your component renders, `useHelloQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHelloQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useHelloQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<HelloQuery, HelloQueryVariables>) {\n        return ApolloReactHooks.useQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\n      }\nexport function useHelloLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<HelloQuery, HelloQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\n        }\nexport type HelloQueryHookResult = ReturnType<typeof useHelloQuery>;\nexport type HelloLazyQueryHookResult = ReturnType<typeof useHelloLazyQuery>;\nexport type HelloQueryResult = ApolloReactCommon.QueryResult<HelloQuery, HelloQueryVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n      firstName\n      lastName\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\nexport type LogoutMutationFn = ApolloReactCommon.MutationFunction<LogoutMutation, LogoutMutationVariables>;\n\n/**\n * __useLogoutMutation__\n *\n * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLogoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [logoutMutation, { data, loading, error }] = useLogoutMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useLogoutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {\n        return ApolloReactHooks.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, baseOptions);\n      }\nexport type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;\nexport type LogoutMutationResult = ApolloReactCommon.MutationResult<LogoutMutation>;\nexport type LogoutMutationOptions = ApolloReactCommon.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;\nexport const MeDocument = gql`\n    query Me {\n  me {\n    id\n    email\n    firstName\n    lastName\n  }\n}\n    `;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\nexport const RegisterDocument = gql`\n    mutation Register($email: String!, $password: String!, $firstName: String!, $lastName: String!, $dateOfBirth: String!, $streetAddress: String!, $postCode: String!, $city: String!, $country: String!) {\n  register(email: $email, password: $password, firsName: $firstName, lastName: $lastName, dateOfBirth: $dateOfBirth, streetAddress: $streetAddress, postCode: $postCode, city: $city, country: $country)\n}\n    `;\nexport type RegisterMutationFn = ApolloReactCommon.MutationFunction<RegisterMutation, RegisterMutationVariables>;\n\n/**\n * __useRegisterMutation__\n *\n * To run a mutation, you first call `useRegisterMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRegisterMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [registerMutation, { data, loading, error }] = useRegisterMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      firstName: // value for 'firstName'\n *      lastName: // value for 'lastName'\n *      dateOfBirth: // value for 'dateOfBirth'\n *      streetAddress: // value for 'streetAddress'\n *      postCode: // value for 'postCode'\n *      city: // value for 'city'\n *      country: // value for 'country'\n *   },\n * });\n */\nexport function useRegisterMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RegisterMutation, RegisterMutationVariables>) {\n        return ApolloReactHooks.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument, baseOptions);\n      }\nexport type RegisterMutationHookResult = ReturnType<typeof useRegisterMutation>;\nexport type RegisterMutationResult = ApolloReactCommon.MutationResult<RegisterMutation>;\nexport type RegisterMutationOptions = ApolloReactCommon.BaseMutationOptions<RegisterMutation, RegisterMutationVariables>;\nexport const TransactionsDocument = gql`\n    query Transactions($currency: String!) {\n  transactions(currency: $currency) {\n    id\n    transactionType\n    date\n    amount\n  }\n}\n    `;\n\n/**\n * __useTransactionsQuery__\n *\n * To run a query within a React component, call `useTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTransactionsQuery({\n *   variables: {\n *      currency: // value for 'currency'\n *   },\n * });\n */\nexport function useTransactionsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<TransactionsQuery, TransactionsQueryVariables>) {\n        return ApolloReactHooks.useQuery<TransactionsQuery, TransactionsQueryVariables>(TransactionsDocument, baseOptions);\n      }\nexport function useTransactionsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<TransactionsQuery, TransactionsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<TransactionsQuery, TransactionsQueryVariables>(TransactionsDocument, baseOptions);\n        }\nexport type TransactionsQueryHookResult = ReturnType<typeof useTransactionsQuery>;\nexport type TransactionsLazyQueryHookResult = ReturnType<typeof useTransactionsLazyQuery>;\nexport type TransactionsQueryResult = ApolloReactCommon.QueryResult<TransactionsQuery, TransactionsQueryVariables>;\nexport const UsersDocument = gql`\n    query Users {\n  users {\n    id\n    email\n    firstName\n    lastName\n  }\n}\n    `;\n\n/**\n * __useUsersQuery__\n *\n * To run a query within a React component, call `useUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUsersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUsersQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UsersQuery, UsersQueryVariables>) {\n        return ApolloReactHooks.useQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n      }\nexport function useUsersLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UsersQuery, UsersQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n        }\nexport type UsersQueryHookResult = ReturnType<typeof useUsersQuery>;\nexport type UsersLazyQueryHookResult = ReturnType<typeof useUsersLazyQuery>;\nexport type UsersQueryResult = ApolloReactCommon.QueryResult<UsersQuery, UsersQueryVariables>;","import React from 'react';\n\nexport const Loading: React.FC = () => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n            }}\n        >\n            <img src=\"loading.svg\" alt=\"Loading...\" style={{ height: '124px' }} />\n        </div>\n    );\n};\n","import { createMuiTheme, Theme } from '@material-ui/core';\n\nexport enum ColorScheme {\n    PRIMARY = '#222B2D',\n    SECONDARY = '#29AABB',\n    ORANGE = '#F15742',\n    MAROON = '#432D32',\n    WHITE = '#FFFEF9',\n    HOVER = '#148C9C',\n}\n\n// For Material UI\nexport const theme: Theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: ColorScheme.PRIMARY,\n        },\n        secondary: {\n            main: ColorScheme.ORANGE,\n        },\n        info: {\n            main: ColorScheme.MAROON,\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n    },\n});\n","import React from 'react';\nimport { useUsersQuery } from '../generated/graphql';\nimport { Loading } from '../components/Loading/Loading';\n\ninterface Props {}\n\nexport const Home: React.FC<Props> = () => {\n    const { data } = useUsersQuery({ fetchPolicy: 'network-only' });\n\n    if (!data) {\n        return <Loading />;\n    }\n\n    return (\n        <div>\n            <div>users: </div>\n            <ul>\n                {data.users.map(x => {\n                    return (\n                        <li key={x.id}>\n                            {x.id}, {x.email}, {x.firstName} {x.lastName}\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n","import * as yup from 'yup';\n\nexport const registerValidationSchema = yup.object({\n    firstName: yup.string().required('First name is required'),\n    lastName: yup.string().required('Last name is required'),\n    email: yup\n        .string()\n        .email()\n        .required('Email is required'),\n    streetAddres: yup.string().required('Street address is required'),\n    postCode: yup.string().required('Post code is required'),\n    city: yup.string().required('City is required'),\n    country: yup.string().required('Country is required'),\n    password: yup.lazy(value =>\n        !value\n            ? yup.string()\n            : yup\n                  .string()\n                  .min(6, 'Password must be at least 6 characters')\n                  .required('Password is required'),\n    ),\n    confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords do not match'),\n    dateOfBirth: yup.date().required('Date of birth is required'),\n});\n","import { FieldAttributes, useField } from 'formik';\nimport React from 'react';\nimport { ThemeProvider, TextField } from '@material-ui/core';\nimport { theme } from '../../utils/theme';\n\nexport const FormTextField: React.FC<FieldAttributes<{}>> = ({\n    placeholder,\n    className,\n    type,\n    ...props\n}) => {\n    const [field, meta] = useField<{}>(props);\n    const errorText = meta.error && meta.touched ? meta.error : '';\n\n    return (\n        <ThemeProvider theme={theme}>\n            <TextField\n                className={className}\n                type={type}\n                variant=\"outlined\"\n                required={true}\n                placeholder={placeholder}\n                {...field}\n                helperText={errorText}\n                error={!!errorText}\n            />\n        </ThemeProvider>\n    );\n};\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\n\ninterface AlertMessageProps {\n    message: string;\n}\n\nexport const AlertMessage: React.FC<AlertMessageProps> = ({ message }) => {\n    return (\n        <Alert variant=\"outlined\" severity=\"error\">\n            {message}\n        </Alert>\n    );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useRegisterStyles = makeStyles({\n    root: {\n        margin: '0 auto',\n        top: '25%',\n        height: '100%',\n        width: '348px',\n    },\n    headerText: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    alignedFormContent: {\n        marginTop: 12,\n        display: 'flex',\n        width: '100%',\n    },\n    alignedFormField: {\n        width: '50%',\n    },\n    formField: {\n        width: '100%',\n        marginTop: 12,\n    },\n    formButton: {\n        marginTop: 12,\n        textTransform: 'none',\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        textAlign: 'center',\n    },\n    loginText: {\n        margintop: 12,\n    },\n    spacer: {\n        width: 8,\n    },\n});\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport { useRegisterMutation } from '../../generated/graphql';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Button, ThemeProvider } from '@material-ui/core';\nimport { theme } from '../../utils/theme';\nimport { registerValidationSchema } from '../../schemas /registerValidationSchema';\nimport { FormTextField } from '../Forms/FormTextField';\nimport { AlertMessage } from '../Alerts/AlertMessage';\nimport { useRegisterStyles } from './Register.style';\n\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n    const [register] = useRegisterMutation();\n    const [alertMessage, setAlertMessage] = useState('');\n    const classes = useRegisterStyles();\n\n    return (\n        <div>\n            <div>\n                <h1 className={classes.headerText}>Sign Up</h1>\n            </div>\n            {alertMessage.length > 0 && (\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <AlertMessage message={alertMessage} />\n                </div>\n            )}\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    streetAddres: '',\n                    postCode: '',\n                    city: '',\n                    country: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: '',\n                    dateOfBirth: '',\n                }}\n                validationSchema={registerValidationSchema}\n                onSubmit={async (data, { setSubmitting, resetForm }) => {\n                    setSubmitting(true);\n\n                    const response = await register({\n                        variables: {\n                            firstName: data.firstName,\n                            lastName: data.lastName,\n                            email: data.email,\n                            password: data.password,\n                            streetAddress: data.streetAddres,\n                            postCode: data.postCode,\n                            city: data.city,\n                            country: data.country,\n                            dateOfBirth: data.dateOfBirth,\n                        },\n                    });\n\n                    if (response.data?.register) {\n                        history.push('/login');\n                        setSubmitting(false);\n                        resetForm();\n                    } else {\n                        setAlertMessage('User with that email already exists.');\n                        setSubmitting(false);\n                    }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <div className={classes.root}>\n                        <Form onChange={() => setAlertMessage('')}>\n                            <div className={classes.alignedFormContent}>\n                                <FormTextField\n                                    className={classes.alignedFormField}\n                                    name=\"firstName\"\n                                    placeholder=\"First name\"\n                                    type=\"input\"\n                                />\n                                <div className={classes.spacer} />\n                                <FormTextField\n                                    className={classes.alignedFormField}\n                                    name=\"lastName\"\n                                    placeholder=\"Last name\"\n                                    type=\"input\"\n                                />\n                            </div>\n                            <div>\n                                <div className={classes.alignedFormContent}>\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"streetAddres\"\n                                        placeholder=\"Street address\"\n                                        type=\"input\"\n                                    />\n                                    <div className={classes.spacer} />\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"postCode\"\n                                        placeholder=\"Post code\"\n                                        type=\"input\"\n                                    />\n                                </div>\n                                <div className={classes.alignedFormContent}>\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"city\"\n                                        placeholder=\"City\"\n                                        type=\"input\"\n                                    />\n                                    <div className={classes.spacer} />\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"country\"\n                                        placeholder=\"Country\"\n                                        type=\"input\"\n                                    />\n                                </div>\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    type=\"input\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"confirmPassword\"\n                                    placeholder=\"Confirm password\"\n                                    type=\"password\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"dateOfBirth\"\n                                    type=\"date\"\n                                />\n                            </div>\n                            <div className={classes.formButton}>\n                                <ThemeProvider theme={theme}>\n                                    <Button\n                                        className={classes.formButton}\n                                        disabled={isSubmitting}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        type=\"submit\"\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </ThemeProvider>\n                            </div>\n                            <div className={classes.loginText}>\n                                <p>\n                                    Already have an account? <a href=\"/login\">Login here.</a>\n                                </p>\n                            </div>\n                        </Form>\n                    </div>\n                )}\n            </Formik>\n        </div>\n    );\n};\n","import * as yup from 'yup';\n\nexport const loginValidationSchema = yup.object({\n    email: yup\n        .string()\n        .email()\n        .required('Email is required'),\n    password: yup.lazy(value =>\n        !value\n            ? yup.string()\n            : yup\n                  .string()\n                  .min(6, 'Password must be at least 6 characters')\n                  .required('Password is required'),\n    ),\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useLoginStyles = makeStyles({\n    root: {\n        margin: '0 auto',\n        top: '25%',\n        height: '100%',\n        width: '348px',\n    },\n    headerText: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    formField: {\n        width: '100%',\n        marginTop: 12,\n    },\n    formButton: {\n        marginTop: 12,\n        textTransform: 'none',\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        textAlign: 'center',\n    },\n    registerText: {\n        marginTop: 12,\n    },\n});\n","import React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useLoginMutation, MeDocument, MeQuery } from '../../generated/graphql';\nimport { setAccessToken } from '../../utils/accessToken';\nimport { Formik, Form } from 'formik';\nimport { FormTextField } from '../Forms/FormTextField';\nimport { Button, ThemeProvider } from '@material-ui/core';\nimport { theme } from '../../utils/theme';\nimport { loginValidationSchema } from '../../schemas /loginValidationSchema';\nimport { AlertMessage } from '../Alerts/AlertMessage';\nimport { useLoginStyles } from './Login.style';\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n    const [login] = useLoginMutation();\n    const [alertMessage, setAlertMessage] = useState('');\n    const classes = useLoginStyles();\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <h1 className={classes.headerText}>Login</h1>\n            </div>\n            {alertMessage.length > 0 && (\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <AlertMessage message={alertMessage} />\n                </div>\n            )}\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                validationSchema={loginValidationSchema}\n                onSubmit={async (data, { setSubmitting, resetForm }) => {\n                    setSubmitting(true);\n\n                    try {\n                        const response = await login({\n                            variables: {\n                                email: data.email,\n                                password: data.password,\n                            },\n                            update: (store, { data }) => {\n                                if (!data) {\n                                    return null;\n                                }\n                                store.writeQuery<MeQuery>({\n                                    query: MeDocument,\n                                    data: {\n                                        me: data.login.user,\n                                    },\n                                });\n                            },\n                        });\n\n                        if (response && response.data) {\n                            setAccessToken(response.data.login.accessToken);\n                            history.push('/accounts');\n                            setSubmitting(false);\n                            resetForm();\n                        }\n                    } catch (error) {\n                        const errorMessage = error.message.split(':')[1];\n                        setAlertMessage(errorMessage);\n                        setSubmitting(false);\n                    }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <div>\n                        <Form>\n                            <div>\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    type=\"input\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                />\n                            </div>\n                            <div className={classes.formButton}>\n                                <ThemeProvider theme={theme}>\n                                    <Button\n                                        className={classes.formButton}\n                                        disabled={isSubmitting}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        type=\"submit\"\n                                    >\n                                        Login\n                                    </Button>\n                                </ThemeProvider>\n                            </div>\n                            <div className={classes.registerText}>\n                                <p>\n                                    Don't have an account? <a href=\"/register\">Sign up here.</a>\n                                </p>\n                            </div>\n                        </Form>\n                    </div>\n                )}\n            </Formik>\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\nimport { useTransactionsQuery } from '../../generated/graphql';\n\ninterface ChartProps {\n    currency: string;\n}\n\nexport const Chart: React.FC<ChartProps> = ({ currency }) => {\n    const { data } = useTransactionsQuery({\n        variables: { currency: currency },\n    });\n\n    let dates: Date[] = [];\n    let sortedDates: string[] = [];\n    let currentDate = moment();\n\n    useEffect(() => {\n        if (data) {\n            data.transactions.forEach(transaction => {\n                let parsedDate = Date.parse(transaction.date);\n                dates.push(new Date(parsedDate));\n            });\n        }\n        dates\n            .sort((a, b) => a.getTime() - b.getTime())\n            .forEach(date => {\n                if (moment(date).isSame(currentDate, 'month')) {\n                    sortedDates.push(date.toLocaleDateString());\n                }\n            });\n    }, [data, currentDate, dates, sortedDates]);\n\n    return (\n        <div>\n            <Line\n                data={{\n                    labels: !!sortedDates ? sortedDates : [],\n                    datasets: [\n                        {\n                            label: 'Spending (this month)',\n                            fill: true,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(75,192,192,0.4)',\n                            borderColor: 'rgba(75,192,192,1)',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: 'rgba(75,192,192,1)',\n                            pointBackgroundColor: '#fff',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                            pointHoverBorderColor: 'rgba(220,220,220,1)',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 1,\n                            pointHitRadius: 10,\n                            data: !!data\n                                ? data.transactions.map(transaction => {\n                                      return transaction.amount;\n                                  })\n                                : [],\n                        },\n                    ],\n                    options: {\n                        legend: { display: false },\n                        title: {\n                            display: true,\n                            text: 'Predicted world population (millions) in 2050',\n                        },\n                    },\n                }}\n                height={80}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { ColorScheme } from '../../utils/theme';\n\ninterface TitleProps {\n    title: string;\n    fontSize: number;\n}\n\nexport const Title: React.FC<TitleProps> = (props: TitleProps) => {\n    return (\n        <Typography\n            style={{ fontWeight: 'bold', fontSize: props.fontSize, color: ColorScheme.PRIMARY }}\n        >\n            {props.title}\n        </Typography>\n    );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgWorld = function SvgWorld(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"circle\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"g\", null, React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"256.001,100.174 264.29,125.683 291.11,125.683 269.411,141.448 277.7,166.957  256.001,151.191 234.301,166.957 242.59,141.448 220.891,125.683 247.712,125.683  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"145.814,145.814 169.714,157.99 188.679,139.026 184.482,165.516 208.381,177.693  181.89,181.889 177.694,208.381 165.517,184.482 139.027,188.679 157.992,169.714  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"100.175,256 125.684,247.711 125.684,220.89 141.448,242.59 166.958,234.301 151.191,256  166.958,277.699 141.448,269.411 125.684,291.11 125.684,264.289  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"145.814,366.186 157.991,342.286 139.027,323.321 165.518,327.519 177.693,303.62  181.89,330.111 208.38,334.307 184.484,346.484 188.679,372.974 169.714,354.009  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"256.001,411.826 247.711,386.317 220.891,386.317 242.591,370.552 234.301,345.045  256.001,360.809 277.7,345.045 269.411,370.552 291.11,386.317 264.289,386.317  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"366.187,366.186 342.288,354.01 323.322,372.975 327.519,346.483 303.622,334.307  330.112,330.111 334.308,303.62 346.484,327.519 372.974,323.321 354.009,342.288  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"411.826,256 386.317,264.289 386.317,291.11 370.552,269.41 345.045,277.699 360.81,256  345.045,234.301 370.553,242.59 386.317,220.89 386.317,247.712  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"366.187,145.814 354.01,169.714 372.975,188.679 346.483,184.481 334.308,208.38  330.112,181.889 303.622,177.692 327.519,165.516 323.322,139.027 342.289,157.991  \"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgWorld, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/world.7aea52bb.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgFlag = function SvgFlag(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"circle\", {\n    style: {\n      fill: \"#F0F0F0\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M244.87,256H512c0-23.106-3.08-45.49-8.819-66.783H244.87V256z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M244.87,122.435h229.556c-15.671-25.572-35.708-48.175-59.07-66.783H244.87V122.435z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M256,512c60.249,0,115.626-20.824,159.356-55.652H96.644C140.374,491.176,195.751,512,256,512z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M37.574,389.565h436.852c12.581-20.529,22.338-42.969,28.755-66.783H8.819 C15.236,346.596,24.993,369.036,37.574,389.565z\"\n  })), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M118.584,39.978h23.329l-21.7,15.765l8.289,25.509l-21.699-15.765L85.104,81.252l7.16-22.037 C73.158,75.13,56.412,93.776,42.612,114.552h7.475l-13.813,10.035c-2.152,3.59-4.216,7.237-6.194,10.938l6.596,20.301l-12.306-8.941 c-3.059,6.481-5.857,13.108-8.372,19.873l7.267,22.368h26.822l-21.7,15.765l8.289,25.509l-21.699-15.765l-12.998,9.444 C0.678,234.537,0,245.189,0,256h256c0-141.384,0-158.052,0-256C205.428,0,158.285,14.67,118.584,39.978z M128.502,230.4 l-21.699-15.765L85.104,230.4l8.289-25.509l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822l-21.7,15.765L128.502,230.4z  M120.213,130.317l8.289,25.509l-21.699-15.765l-21.699,15.765l8.289-25.509l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822 L120.213,130.317z M220.328,230.4l-21.699-15.765L176.93,230.4l8.289-25.509l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822 l-21.7,15.765L220.328,230.4z M212.039,130.317l8.289,25.509l-21.699-15.765l-21.699,15.765l8.289-25.509l-21.7-15.765h26.822 l8.288-25.509l8.288,25.509h26.822L212.039,130.317z M212.039,55.743l8.289,25.509l-21.699-15.765L176.93,81.252l8.289-25.509 l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822L212.039,55.743z\"\n  }), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgFlag, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/flag.36ab476e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgUk = function SvgUk(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"circle\", {\n    style: {\n      fill: \"#F0F0F0\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M52.92,100.142c-20.109,26.163-35.272,56.318-44.101,89.077h133.178L52.92,100.142z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M503.181,189.219c-8.829-32.758-23.993-62.913-44.101-89.076l-89.075,89.076H503.181z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M8.819,322.784c8.83,32.758,23.993,62.913,44.101,89.075l89.074-89.075L8.819,322.784L8.819,322.784 z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M411.858,52.921c-26.163-20.109-56.317-35.272-89.076-44.102v133.177L411.858,52.921z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M100.142,459.079c26.163,20.109,56.318,35.272,89.076,44.102V370.005L100.142,459.079z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M189.217,8.819c-32.758,8.83-62.913,23.993-89.075,44.101l89.075,89.075V8.819z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M322.783,503.181c32.758-8.83,62.913-23.993,89.075-44.101l-89.075-89.075V503.181z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M370.005,322.784l89.075,89.076c20.108-26.162,35.272-56.318,44.101-89.076H370.005z\"\n  })), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M509.833,222.609h-220.44h-0.001V2.167C278.461,0.744,267.317,0,256,0 c-11.319,0-22.461,0.744-33.391,2.167v220.44v0.001H2.167C0.744,233.539,0,244.683,0,256c0,11.319,0.744,22.461,2.167,33.391 h220.44h0.001v220.442C233.539,511.256,244.681,512,256,512c11.317,0,22.461-0.743,33.391-2.167v-220.44v-0.001h220.442 C511.256,278.461,512,267.319,512,256C512,244.683,511.256,233.539,509.833,222.609z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M322.783,322.784L322.783,322.784L437.019,437.02c5.254-5.252,10.266-10.743,15.048-16.435 l-97.802-97.802h-31.482V322.784z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M189.217,322.784h-0.002L74.98,437.019c5.252,5.254,10.743,10.266,16.435,15.048l97.802-97.804 V322.784z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M189.217,189.219v-0.002L74.981,74.98c-5.254,5.252-10.266,10.743-15.048,16.435l97.803,97.803 H189.217z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M322.783,189.219L322.783,189.219L437.02,74.981c-5.252-5.254-10.743-10.266-16.435-15.047 l-97.802,97.803V189.219z\"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgUk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/uk.e5564902.svg\";\nexport { ForwardRef as ReactComponent };","export enum Currency {\n    EURO = 'EUR',\n    POUND = 'GBP',\n    DOLLAR = 'USD',\n    BITCOIN = 'BTC',\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useAccountsStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        fontWeight: 'bold',\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        borderRadius: 8,\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    accountCardHeight: {\n        height: 172,\n    },\n    chart: {\n        height: '100%',\n    },\n}));\n","import React, { MouseEvent } from 'react';\nimport { IconButton, Typography, Divider, Button, ThemeProvider } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Title } from '../Typography/Title';\nimport { ColorScheme, theme } from '../../utils/theme';\n\ninterface AccountsCardProps {\n    svg: any | string;\n    currencyIcon: string;\n    fullCurrencyText: string;\n    balance: number;\n    iban: string;\n    onAccountClicked(e: MouseEvent<HTMLButtonElement>): void;\n}\n\ninterface NoAccountCardProps {\n    onCreateNewAccountClicked(e: MouseEvent<HTMLButtonElement>): void;\n}\n\nexport const AccountsCard: React.FC<AccountsCardProps> = ({\n    svg,\n    currencyIcon,\n    fullCurrencyText,\n    balance,\n    iban,\n    onAccountClicked,\n}) => {\n    return (\n        <>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                }}\n            >\n                <div style={{ width: 32 }}>\n                    {!!svg ? (\n                        svg\n                    ) : (\n                        <img\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\"\n                            alt=\"...\"\n                            style={{ width: 32 }}\n                        />\n                    )}\n                </div>\n                <Title title={fullCurrencyText} fontSize={18} />\n                <div>\n                    <IconButton style={{ color: ColorScheme.PRIMARY }} onClick={onAccountClicked}>\n                        <NavigateNextIcon fontSize=\"small\" />\n                    </IconButton>\n                </div>\n            </div>\n            <Typography style={{ margin: '0 auto', marginTop: '24px' }} component=\"p\" variant=\"h4\">\n                {currencyIcon}\n                {balance}\n            </Typography>\n            <Divider style={{ marginTop: 24 }} light />\n            <Typography\n                style={{\n                    marginTop: '14px',\n                    letterSpacing: 1,\n                    color: 'rgba(0, 0, 0, 0.3)',\n                }}\n                component=\"p\"\n            >\n                {!!iban ? iban : 'XXXX APL0 0099 YYYY ZZZZ 78'}\n            </Typography>\n        </>\n    );\n};\n\nexport const NoAccountsCard: React.FC<NoAccountCardProps> = ({ onCreateNewAccountClicked }) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                marginTop: '62px',\n                justifyContent: 'center',\n            }}\n        >\n            <ThemeProvider theme={theme}>\n                <Button\n                    style={{ fontWeight: 'bold', textTransform: 'none', letterSpacing: 1 }}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<AddIcon />}\n                    onClick={onCreateNewAccountClicked}\n                >\n                    Create new account\n                </Button>\n            </ThemeProvider>\n        </div>\n    );\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useDialogStyles = createUseStyles({\n    dialog: {\n        width: '500px',\n        maxWidth: '100%',\n        margin: '0 auto',\n        position: 'fixed',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 999,\n        backgroundColor: '#eee',\n        padding: '10px 20px 40px',\n        borderRadius: '8px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    closeButton: {\n        marginBottom: '15px',\n        padding: '3px 8px',\n        cursor: 'pointer',\n        borderRadius: '50%',\n        border: 'none',\n        width: '30px',\n        height: '30px',\n        fontWeight: 'bold',\n        alignSelf: 'flex-end',\n    },\n});\n\ninterface DialogProps {\n    isOpen: boolean;\n    onClose: any;\n}\n\nexport const Dialog: React.FC<DialogProps> = ({ children, isOpen, onClose }) => {\n    const classes = useDialogStyles();\n\n    let dialog: JSX.Element | undefined = (\n        <div className={classes.dialog}>\n            <button className={classes.closeButton} onClick={onClose}>\n                x\n            </button>\n            {children}\n        </div>\n    );\n\n    if (!isOpen) {\n        dialog = undefined;\n    }\n    return <div>{dialog}</div>;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"style\", null, \".a{opacity:0;}.b{fill:#fff;}.c{fill:#ff5f00;}.d{fill:#eb001b;}.e{fill:#f79e1b;}\"));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"Asset 1\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  className: \"a\"\n}, React.createElement(\"rect\", {\n  className: \"b\",\n  width: 131.39,\n  height: 86.9\n}));\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  className: \"c\",\n  x: 48.37,\n  y: 15.14,\n  width: 34.66,\n  height: 56.61\n});\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"d\",\n  d: \"M51.94,43.45a35.94,35.94,0,0,1,13.75-28.3,36,36,0,1,0,0,56.61A35.94,35.94,0,0,1,51.94,43.45Z\"\n});\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"e\",\n  d: \"M120.5,65.76V64.6H121v-.24h-1.19v.24h.47v1.16Zm2.31,0v-1.4h-.36l-.42,1-.42-1h-.36v1.4h.26V64.7l.39.91h.27l.39-.91v1.06Z\"\n});\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"e\",\n  d: \"M123.94,43.45a36,36,0,0,1-58.25,28.3,36,36,0,0,0,0-56.61,36,36,0,0,1,58.25,28.3Z\"\n});\n\nvar SvgMcSymbol = function SvgMcSymbol(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 131.39 86.9\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? React.createElement(\"title\", null, title) : null, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMcSymbol, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mc_symbol.543bc93b.svg\";\nexport { ForwardRef as ReactComponent };","import React, { MouseEvent } from 'react';\nimport { ThemeProvider, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { theme } from '../../utils/theme';\nimport { ReactComponent as MasterCard } from '../../assets/mc_symbol.svg';\n\ninterface ApolloCardProps {\n    cardNumber?: string;\n    validThru?: string;\n    cvv?: number;\n    onCreateNewCardClicked?(e: MouseEvent<HTMLButtonElement>): void;\n}\n\nexport const ApolloCard: React.FC<ApolloCardProps> = ({ cardNumber, validThru, cvv }) => {\n    return (\n        <>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                    <span role=\"img\" aria-label=\"logo\">\n                        🚀\n                    </span>\n                </div>\n                <div style={{ fontSize: 18, letterSpacing: 2 }}>{cardNumber}</div>\n                <div style={{ width: 64 }}>\n                    <MasterCard />\n                </div>\n            </div>\n            <div>\n                <div style={{ textTransform: 'uppercase', letterSpacing: 0.5 }}>valid thru: </div>\n                <div>{validThru}</div>\n            </div>\n            <div>\n                <div style={{ textTransform: 'uppercase', letterSpacing: 0.5 }}>cvv</div>\n                <div>{cvv}</div>\n            </div>\n        </>\n    );\n};\n\nexport const NoApolloCard: React.FC<ApolloCardProps> = ({ onCreateNewCardClicked }) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                marginTop: '62px',\n                justifyContent: 'center',\n            }}\n        >\n            <ThemeProvider theme={theme}>\n                <Button\n                    style={{ fontWeight: 'bold', textTransform: 'none', letterSpacing: 1 }}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<AddIcon />}\n                    onClick={onCreateNewCardClicked}\n                >\n                    Create new card\n                </Button>\n            </ThemeProvider>\n        </div>\n    );\n};\n","import React, { useState, useEffect, MouseEvent } from 'react';\nimport {\n    Container,\n    Grid,\n    Paper,\n    List,\n    ListItemText,\n    ListItem,\n    ListItemIcon,\n} from '@material-ui/core';\nimport { Chart } from '../Charts/Chart';\nimport { Title } from '../Typography/Title';\nimport { ReactComponent as Euro } from '../../assets/world.svg';\nimport { ReactComponent as Dollar } from '../../assets/flag.svg';\nimport { ReactComponent as Pound } from '../../assets/uk.svg';\nimport {\n    useAccountsQuery,\n    useCreateAccountMutation,\n    AccountsDocument,\n    useCreateCardMutation,\n    useCardsQuery,\n    CardsDocument,\n} from '../../generated/graphql';\nimport { Loading } from '../Loading/Loading';\nimport { useHistory } from 'react-router-dom';\nimport { useAccountsStyles } from './styles/Accounts.style';\nimport { AccountsCard, NoAccountsCard } from '../cards/AccountsCard';\nimport { Currency } from '../../utils/currencies';\nimport { Dialog } from '../Dialog/Dialog';\nimport { NoApolloCard, ApolloCard } from '../cards/ApolloCard';\n\nconst currencies = ['EUR', 'USD', 'GBP', 'BTC'];\n\nexport const Accounts: React.FC = () => {\n    const { data, loading } = useAccountsQuery();\n    const cards = useCardsQuery();\n    const [createAccount] = useCreateAccountMutation();\n    const [createCard] = useCreateCardMutation();\n    const [totalBalance, setTotalBalance] = useState(0);\n    const [openDialog, setOpenDialog] = useState(false);\n    const history = useHistory();\n    const classes = useAccountsStyles();\n\n    const accountCardHeightPaper = classes.paper + ' ' + classes.accountCardHeight;\n    const chartPaper = classes.paper + ' ' + classes.chart;\n\n    useEffect(() => {\n        let balance = 0;\n        if (data) {\n            data.accounts.forEach(account => {\n                balance += account.balance;\n            });\n            console.log(balance);\n        }\n        setTotalBalance(balance);\n    }, [loading, data]);\n\n    if (!data) {\n        return <Loading />;\n    }\n\n    const determineCurrencyIcon = (c: string) => {\n        switch (c) {\n            case 'EUR':\n                return <Euro />;\n            case 'USD':\n                return <Dollar />;\n            case 'GBP':\n                return <Pound />;\n            case 'BTC':\n                return (\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\"\n                        alt=\"...\"\n                        style={{ width: 32 }}\n                    />\n                );\n        }\n        return undefined;\n    };\n\n    const renderDialog = () => {\n        return (\n            <Dialog isOpen={openDialog} onClose={() => setOpenDialog(false)}>\n                <List>\n                    {currencies.map(c => (\n                        <ListItem\n                            button\n                            key={c}\n                            onClick={async () => {\n                                try {\n                                    const response = await createAccount({\n                                        variables: {\n                                            currency: c,\n                                        },\n                                        refetchQueries: [\n                                            {\n                                                query: AccountsDocument,\n                                                variables: {},\n                                            },\n                                            {\n                                                query: CardsDocument,\n                                                variables: {},\n                                            },\n                                        ],\n                                    });\n\n                                    if (response && response.data) {\n                                        console.log('Account successfully created!');\n                                        setOpenDialog(false);\n                                    }\n                                } catch (error) {\n                                    const errorMessage = error.message.split(':')[1];\n                                    console.log(errorMessage);\n                                }\n                            }}\n                        >\n                            <ListItemIcon>\n                                <div style={{ width: 32 }}>{determineCurrencyIcon(c)}</div>\n                            </ListItemIcon>\n                            <ListItemText primary={c} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Dialog>\n        );\n    };\n\n    const handleAccountClicked = (e: MouseEvent<HTMLButtonElement>, account: any) => {\n        e.preventDefault();\n        history.push({\n            pathname: `/accounts/${account.id}`,\n            state: account,\n        });\n    };\n\n    const handleCreateNewCardClicked = async (e: MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n\n        try {\n            const response = await createCard({\n                variables: {},\n                refetchQueries: [\n                    {\n                        query: CardsDocument,\n                        variables: {},\n                    },\n                ],\n            });\n\n            if (response && response.data) {\n                console.log('Card successfully created!');\n            }\n        } catch (error) {\n            const errorMessage = error.message.split(':')[1];\n            console.log(errorMessage);\n        }\n    };\n\n    const renderNoAccountsCard = () => {\n        return (\n            <>\n                <Grid item xs={12} md={4} lg={4}>\n                    <Paper className={accountCardHeightPaper}>\n                        <NoAccountsCard\n                            onCreateNewAccountClicked={(e: MouseEvent<HTMLButtonElement>) => {\n                                e.preventDefault();\n                                setOpenDialog(true);\n                            }}\n                        />\n                    </Paper>\n                </Grid>\n            </>\n        );\n    };\n\n    const renderNoApolloCard = () => {\n        return (\n            <>\n                <Grid item xs={12} md={4} lg={4}>\n                    <Paper className={accountCardHeightPaper}>\n                        <NoApolloCard\n                            onCreateNewCardClicked={(e: MouseEvent<HTMLButtonElement>) => {\n                                handleCreateNewCardClicked(e);\n                            }}\n                        />\n                    </Paper>\n                </Grid>\n            </>\n        );\n    };\n\n    return (\n        <div className={classes.root}>\n            {renderDialog()}\n            <main className={classes.content}>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div\n                        style={{\n                            marginBottom: 12,\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                        }}\n                    >\n                        <div>\n                            <Title title=\"Analytics\" fontSize={24} />\n                        </div>\n                    </div>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Paper className={chartPaper}>\n                                <Chart currency=\"EUR\" />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div\n                        style={{\n                            marginBottom: 12,\n                            marginTop: 12,\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                        }}\n                    >\n                        <div>\n                            <Title title=\"Accounts\" fontSize={24} />\n                        </div>\n                        <div\n                            style={{\n                                fontSize: 18,\n                                fontWeight: 'bold',\n                                color: 'rgba(0, 0, 0, 0.3)',\n                            }}\n                        >\n                            Total balance: £{totalBalance}\n                        </div>\n                    </div>\n                    <Grid container spacing={3}>\n                        {data.accounts.length > 0 &&\n                            data.accounts.map(account => {\n                                let svg: any | string;\n                                let currencyIcon: string = '';\n                                let fullCurrencyText: string = '';\n\n                                switch (account.currency) {\n                                    case Currency.EURO:\n                                        svg = <Euro />;\n                                        currencyIcon = '€';\n                                        fullCurrencyText = 'Euro';\n                                        break;\n                                    case Currency.DOLLAR:\n                                        svg = <Dollar />;\n                                        currencyIcon = '$';\n                                        fullCurrencyText = 'US Dollar';\n                                        break;\n                                    case Currency.POUND:\n                                        svg = <Pound />;\n                                        currencyIcon = '£';\n                                        fullCurrencyText = 'British Pound';\n                                        break;\n                                    case Currency.BITCOIN:\n                                        svg = '';\n                                        currencyIcon = '฿';\n                                        fullCurrencyText = 'Bitcoin';\n                                        break;\n                                }\n                                return (\n                                    <Grid key={account.id} item xs={12} md={4} lg={4}>\n                                        <Paper className={accountCardHeightPaper}>\n                                            <AccountsCard\n                                                svg={svg}\n                                                currencyIcon={currencyIcon}\n                                                fullCurrencyText={fullCurrencyText}\n                                                balance={account.balance}\n                                                iban={account.iban}\n                                                onAccountClicked={(\n                                                    e: MouseEvent<HTMLButtonElement>,\n                                                ) => handleAccountClicked(e, account)}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                );\n                            })}\n                        {data.accounts.length <= 2 && renderNoAccountsCard()}\n                    </Grid>\n                </Container>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div style={{ marginBottom: 12 }}>\n                        <Title title=\"Cards\" fontSize={24} />\n                    </div>\n                    <Grid container spacing={3}>\n                        {cards.data &&\n                            cards.data.cards &&\n                            cards.data.cards.length > 0 &&\n                            cards.data.cards.map(card => {\n                                return (\n                                    <Grid key={card.id} item xs={12} md={4} lg={4}>\n                                        <Paper className={accountCardHeightPaper}>\n                                            <ApolloCard\n                                                cardNumber={card.cardNumber}\n                                                validThru={\n                                                    new Date(\n                                                        Date.parse(card.expiresIn),\n                                                    ).getMonth() +\n                                                    '/' +\n                                                    new Date(Date.parse(card.expiresIn))\n                                                        .getFullYear()\n                                                        .toString()\n                                                        .substr(-2)\n                                                }\n                                                cvv={card.cvv}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                );\n                            })}\n                        {cards.data && cards.data.cards.length <= 2 && renderNoApolloCard()}\n                    </Grid>\n                </Container>\n            </main>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { ColorScheme } from '../../../utils/theme';\n\nexport const useAccountStyles = makeStyles({\n    root: {\n        margin: '0 auto',\n        marginTop: 24,\n    },\n    accountBalance: {\n        fontSize: 28,\n        textAlign: 'center',\n    },\n    accountInfo: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        width: '240px',\n        margin: '0 auto',\n        marginTop: 12,\n        alignItems: 'center',\n    },\n    accountButtonsSection: {\n        textAlign: 'center',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '0 auto',\n        width: '480px',\n        marginTop: 24,\n    },\n    accountButton: {\n        backgroundColor: ColorScheme.PRIMARY,\n        color: ColorScheme.WHITE,\n        width: 32,\n        height: 32,\n    },\n    accountButtonSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    accountButtonText: {\n        marginTop: 12,\n        fontSize: 14,\n    },\n    transactions: {\n        marginTop: 12,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        width: 480,\n    },\n    transactionsHeader: {\n        marginTop: 12,\n        display: 'flex',\n    },\n    transactionCards: {\n        marginTop: 8,\n    },\n    dialogButton: {\n        marginTop: 12,\n        textTransform: 'none',\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        textAlign: 'center',\n    },\n});\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nexport const useTransactionCardStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {},\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        expandedText: {\n            fontSize: 14,\n            marginBottom: 8,\n        },\n    }),\n);\n","import React, { useState } from 'react';\nimport {\n    Avatar,\n    Card,\n    CardHeader,\n    Collapse,\n    CardContent,\n    IconButton,\n    CardActions,\n    ThemeProvider,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { theme } from '../../utils/theme';\nimport { useTransactionCardStyles } from '../styles/cards/TransactionCard.style';\n\ninterface TransactionCardProps {\n    title: string;\n    amount: string;\n    time: string;\n    card?: string;\n    fee?: number;\n    currencyIcon?: string;\n}\n\nexport const TransactionCard: React.FC<TransactionCardProps> = ({\n    title,\n    time,\n    amount,\n    card,\n    fee,\n    currencyIcon,\n}) => {\n    const classes = useTransactionCardStyles();\n    const [expanded, setExpanded] = useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <div style={{ marginTop: 12 }}>\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={<Avatar aria-label=\"whatever\">R</Avatar>}\n                    title={title}\n                    subheader={time}\n                    style={{ textAlign: 'left' }}\n                />\n                <CardActions style={{ marginTop: '-40px' }}>\n                    <ThemeProvider theme={theme}>\n                        <IconButton\n                            style={{ marginLeft: 420 }}\n                            color=\"primary\"\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </ThemeProvider>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent style={{ marginTop: '-24px' }}>\n                        <hr\n                            style={{\n                                border: 'none',\n                                borderBottom: `1px solid black`,\n                            }}\n                        />\n                        <div className={classes.expandedText} style={{ marginTop: 12 }}>\n                            Apollo card: <span style={{ color: 'black' }}>{card}</span>\n                        </div>\n                        <div className={classes.expandedText}>\n                            Amount:{' '}\n                            <span style={{ color: 'black' }}>\n                                {currencyIcon}\n                                {amount}\n                            </span>\n                        </div>\n                        <div className={classes.expandedText}>\n                            Fee: <span style={{ color: 'black' }}>{fee}</span>\n                        </div>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ThemeProvider, IconButton, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SwapVert from '@material-ui/icons/SwapVert';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { ReactComponent as Euro } from '../../assets/world.svg';\nimport { ReactComponent as Dollar } from '../../assets/flag.svg';\nimport { ReactComponent as Pound } from '../../assets/uk.svg';\nimport { theme } from '../../utils/theme';\nimport { useAccountStyles } from './styles/Account.style';\nimport { TransactionCard } from '../cards/TransactionCard';\nimport { Loading } from '../Loading/Loading';\nimport {\n    useCreateTransactionMutation,\n    useTransactionsQuery,\n    TransactionsDocument,\n    TransactionsQuery,\n    useAddMoneyMutation,\n    useMeQuery,\n    Transaction,\n    useCardsQuery,\n} from '../../generated/graphql';\nimport { Dialog } from '../Dialog/Dialog';\nimport { FormTextField } from '../Forms/FormTextField';\nimport { Form, Formik } from 'formik';\nimport { Title } from '../Typography/Title';\n\ninterface TransactionProps {\n    account: TransactionsQuery | undefined;\n    currencyIcon?: string;\n}\n\nconst Transactions: React.FC<TransactionProps> = ({ account, currencyIcon }) => {\n    const { data } = useCardsQuery();\n    const classes = useAccountStyles();\n\n    if (!account) {\n        return <Loading />;\n    }\n\n    return (\n        <div>\n            <div className={classes.transactions}>\n                <div className={classes.transactionsHeader}></div>\n                <div className={classes.transactionCards}>\n                    {account.transactions.length > 0 &&\n                        account.transactions.map((transaction: Transaction, index: number) => {\n                            return (\n                                <TransactionCard\n                                    key={index}\n                                    title={transaction.transactionType}\n                                    time={new Date(\n                                        Date.parse(transaction.date),\n                                    ).toLocaleDateString()}\n                                    card={data && data.cards[0].cardNumber}\n                                    fee={0}\n                                    amount={transaction.amount}\n                                    currencyIcon={currencyIcon}\n                                />\n                            );\n                        })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const Account: React.FC = () => {\n    const history = useHistory<any>();\n    const [createTransaction] = useCreateTransactionMutation();\n    const [addMoney] = useAddMoneyMutation();\n    const { data } = useTransactionsQuery({\n        variables: { currency: history.location.state.currency },\n    });\n    const user = useMeQuery();\n\n    const [accountBalance, setAccountBalance] = useState(0);\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n    const [openExchangeDialog, setOpenExchangeDialog] = useState(false);\n    const [openDetailsDialog, setOpenDetailsDialog] = useState(false);\n\n    const classes = useAccountStyles();\n\n    let currencyIcon: string = '';\n    let currencyFullText: string = '';\n    let svg: any | string;\n\n    useEffect(() => {\n        setAccountBalance(history.location.state.balance);\n    }, [history]);\n\n    switch (history.location.state.currency) {\n        case 'EUR':\n            currencyIcon = '€';\n            currencyFullText = 'Euro';\n            svg = <Euro />;\n            break;\n        case 'USD':\n            currencyIcon = '$';\n            currencyFullText = 'US Dollar';\n            svg = <Dollar />;\n            break;\n        case 'GBP':\n            currencyIcon = '£';\n            currencyFullText = 'British Pound';\n            svg = <Pound />;\n            break;\n        case 'BTC':\n            currencyIcon = '฿';\n            currencyFullText = 'Bitcoin';\n            svg = undefined;\n            break;\n    }\n\n    const simulate = async () => {\n        try {\n            const response = await createTransaction({\n                variables: { currency: history.location.state.currency },\n                refetchQueries: [\n                    {\n                        query: TransactionsDocument,\n                        variables: { currency: history.location.state.currency },\n                    },\n                ],\n            });\n\n            if (response && response.data) {\n                console.log(response.data);\n            }\n        } catch (error) {\n            const errorMessage = error.message.split(':')[1];\n            console.log(errorMessage);\n        }\n    };\n\n    const renderAddDialog = () => {\n        return (\n            <Dialog isOpen={openAddDialog} onClose={() => setOpenAddDialog(false)}>\n                <Title title=\"Add money\" fontSize={18} />\n                <div style={{ marginTop: 12 }}>\n                    <Formik\n                        initialValues={{ amount: '' }}\n                        onSubmit={async (data, { setSubmitting, resetForm }) => {\n                            setSubmitting(true);\n\n                            try {\n                                const response = await addMoney({\n                                    variables: {\n                                        amount: parseInt(data.amount),\n                                        currency: history.location.state.currency,\n                                    },\n                                });\n\n                                if (response && response.data) {\n                                    setSubmitting(false);\n                                    setAccountBalance(response.data.addMoney);\n                                    setOpenAddDialog(false);\n                                    resetForm();\n                                }\n                            } catch (error) {\n                                const errorMessage = error.message.split(':')[1];\n                                console.log(errorMessage);\n                                setSubmitting(false);\n                            }\n                        }}\n                    >\n                        {({ isSubmitting }) => (\n                            <div>\n                                <Form>\n                                    <FormTextField\n                                        name=\"amount\"\n                                        placeholder=\"amount\"\n                                        type=\"number\"\n                                    />\n                                    <div>\n                                        <ThemeProvider theme={theme}>\n                                            <Button\n                                                className={classes.dialogButton}\n                                                disabled={isSubmitting}\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                type=\"submit\"\n                                            >\n                                                Add money\n                                            </Button>\n                                        </ThemeProvider>\n                                    </div>\n                                </Form>\n                            </div>\n                        )}\n                    </Formik>\n                </div>\n            </Dialog>\n        );\n    };\n\n    const renderExchangeDialog = () => {\n        return (\n            <Dialog isOpen={openExchangeDialog} onClose={() => setOpenExchangeDialog(false)}>\n                Exchange\n            </Dialog>\n        );\n    };\n\n    const renderDetailsDialog = () => {\n        if (user && user.data && user.data.me) {\n            return (\n                <Dialog isOpen={openDetailsDialog} onClose={() => setOpenDetailsDialog(false)}>\n                    Beneficiary: {user.data.me.firstName} {user.data.me.lastName} <br />\n                    IBAN: {history.location.state.iban} <br />\n                    BIC: {history.location.state.bic}\n                </Dialog>\n            );\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            {renderAddDialog()}\n            {renderExchangeDialog()}\n            {renderDetailsDialog()}\n\n            <div style={{ position: 'absolute', right: 20 }}>\n                <ThemeProvider theme={theme}>\n                    <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        style={{\n                            fontWeight: 'bold',\n                            letterSpacing: 1,\n                            textTransform: 'none',\n                        }}\n                        onClick={() => simulate()}\n                    >\n                        Simulate\n                    </Button>\n                </ThemeProvider>\n            </div>\n            <div className={classes.accountBalance}>\n                {currencyIcon}\n                {accountBalance}\n            </div>\n            <div className={classes.accountInfo}>\n                <div>{currencyFullText}</div>\n                <div style={{ width: 32 }}>\n                    {!!svg ? (\n                        svg\n                    ) : (\n                        <img\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\"\n                            alt=\"...\"\n                            style={{ width: 32 }}\n                        />\n                    )}\n                </div>\n                <div>{history.location.state.currency}</div>\n            </div>\n\n            <div className={classes.accountButtonsSection}>\n                <ThemeProvider theme={theme}>\n                    <div>\n                        <IconButton\n                            className={classes.accountButton}\n                            aria-label=\"Add\"\n                            onClick={e => {\n                                e.preventDefault();\n                                setOpenAddDialog(true);\n                            }}\n                        >\n                            <AddIcon />\n                        </IconButton>\n                        <div className={classes.accountButtonText}>Add money</div>\n                    </div>\n                    <div>\n                        <IconButton\n                            className={classes.accountButton}\n                            aria-label=\"Exchange\"\n                            onClick={e => {\n                                e.preventDefault();\n                                setOpenExchangeDialog(true);\n                            }}\n                        >\n                            <SwapVert />\n                        </IconButton>\n                        <div className={classes.accountButtonText}>Exchange</div>\n                    </div>\n                    <div>\n                        <IconButton\n                            className={classes.accountButton}\n                            aria-label=\"Details\"\n                            onClick={e => {\n                                e.preventDefault();\n                                setOpenDetailsDialog(true);\n                            }}\n                        >\n                            <InfoOutlinedIcon />\n                        </IconButton>\n                        <div className={classes.accountButtonText}>Details</div>\n                    </div>\n                </ThemeProvider>\n            </div>\n            <hr style={{ width: 480, marginTop: 24, color: '#fcfcfc' }} />\n            <Transactions account={data} currencyIcon={currencyIcon} />\n        </div>\n    );\n};\n","import { createUseStyles } from 'react-jss';\nimport { ColorScheme } from '../../utils/theme';\n\nexport const useToolbarStyles = createUseStyles({\n    toolbar: {\n        // position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '56px',\n        backgroundColor: ColorScheme.PRIMARY,\n    },\n    navigation: {\n        display: 'flex',\n        height: '100%',\n        alignItems: 'center',\n        padding: '0 1rem',\n    },\n    logo: {\n        textTransform: 'uppercase',\n        letterSpacing: 2,\n        marginLeft: '1.5rem',\n        '& a': {\n            color: ColorScheme.WHITE,\n            textDecoration: 'none',\n            fontSize: '1.5rem',\n        },\n    },\n    toggleButton: {},\n    navigationItems: {\n        '& ul': {\n            listStyle: 'none',\n            margin: 0,\n            padding: 0,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& li': {\n            padding: '0 0.5rem',\n        },\n        '& a': {\n            color: ColorScheme.WHITE,\n            letterSpacing: 1,\n            textDecoration: 'none',\n            fontWeight: 'bold',\n        },\n        '& a:hover': {\n            color: ColorScheme.SECONDARY,\n        },\n        '& a:active': {\n            color: ColorScheme.SECONDARY,\n        },\n    },\n    navButton: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        marginLeft: '1rem',\n        height: 32,\n        width: 102,\n        borderRadius: 4,\n        border: 'none',\n        backgroundColor: ColorScheme.SECONDARY,\n        color: ColorScheme.WHITE,\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: ColorScheme.HOVER,\n        },\n        '&:focus': {\n            outline: 0,\n        },\n    },\n    spacer: {\n        flex: 1,\n    },\n    '@media (max-width: 768px)': {\n        navigationItems: {\n            display: 'none',\n        },\n    },\n    '@media (min-width: 769px)': {\n        toggleButton: {\n            display: 'none',\n        },\n        logo: {\n            marginLeft: 0,\n        },\n    },\n});\n","import { createUseStyles } from 'react-jss';\n\nexport const useDrawerToggleButtonStyles = createUseStyles({\n    toggleButton: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        height: '24px',\n        width: '28px',\n        background: 'transparent',\n        cursor: 'pointer',\n        padding: 0,\n        border: 'none',\n        boxSizing: 'border-box',\n        '& :focus': {\n            outline: 'none',\n        },\n    },\n    toggleButtonLine: {\n        width: '30px',\n        height: '2px',\n        background: 'white',\n    },\n});\n","import React from 'react';\nimport { useDrawerToggleButtonStyles } from './DrawerToggleButton.style';\n\ninterface DrawerToggleButtonProps {\n    click(): void;\n}\n\nexport const DrawerToggleButton: React.FC<DrawerToggleButtonProps> = (\n    props: DrawerToggleButtonProps,\n) => {\n    const classes = useDrawerToggleButtonStyles();\n\n    return (\n        <button className={classes.toggleButton} onClick={props.click}>\n            <div className={classes.toggleButtonLine} />\n            <div className={classes.toggleButtonLine} />\n            <div className={classes.toggleButtonLine} />\n        </button>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useToolbarStyles } from './Toolbar.style';\nimport { DrawerToggleButton } from '../SideDrawer/DrawerToggleButton';\nimport { useMeQuery, useLogoutMutation } from '../../generated/graphql';\nimport { useHistory } from 'react-router-dom';\nimport { setAccessToken } from '../../utils/accessToken';\n\ninterface ToolbarProps {\n    drawerClickHandler(): void;\n}\n\nconst navigationItems: string[] = ['Accounts', 'Insights'];\n\nexport const Toolbar: React.FC<ToolbarProps> = (props: ToolbarProps) => {\n    const { data, loading } = useMeQuery();\n    const [logout, { client }] = useLogoutMutation();\n    const [showAuthUserButtons, setShowAuthUserButtons] = useState(false);\n    const history = useHistory();\n    const classes = useToolbarStyles();\n\n    useEffect(() => {\n        if (!loading && data && data.me) {\n            setShowAuthUserButtons(true);\n        } else {\n            setShowAuthUserButtons(false);\n        }\n    }, [data, loading]);\n\n    const renderAuthUserButtons = () => {\n        return (\n            <>\n                {navigationItems.map(item => {\n                    let routeTo: string = '/';\n\n                    switch (item) {\n                        case 'Accounts':\n                            routeTo = '/accounts';\n                            break;\n                        case 'Insights':\n                            routeTo = '/';\n                            break;\n                    }\n                    return (\n                        <li key={item}>\n                            <a href={routeTo}>{item}</a>\n                        </li>\n                    );\n                })}\n                <button\n                    className={classes.navButton}\n                    onClick={async e => {\n                        e.preventDefault();\n                        await logout().then(() => history.push('/'));\n                        setAccessToken('');\n                        await client!.resetStore();\n                    }}\n                >\n                    Logout\n                </button>\n            </>\n        );\n    };\n\n    const renderNonAuthUserButtons = () => {\n        return (\n            <>\n                <button\n                    className={classes.navButton}\n                    onClick={e => {\n                        e.preventDefault();\n                        history.push('/login');\n                    }}\n                >\n                    Login\n                </button>\n                <button\n                    className={classes.navButton}\n                    onClick={e => {\n                        e.preventDefault();\n                        history.push('/register');\n                    }}\n                >\n                    Sign Up\n                </button>\n            </>\n        );\n    };\n\n    return (\n        <header className={classes.toolbar}>\n            <nav className={classes.navigation}>\n                <div className={classes.toggleButton}>\n                    <DrawerToggleButton click={props.drawerClickHandler} />\n                </div>\n                <div className={classes.logo}>\n                    <a href=\"/\">\n                        <span role=\"img\" aria-label=\"logo\">\n                            🚀\n                        </span>\n                    </a>\n                </div>\n                <div className={classes.spacer} />\n                <div className={classes.navigationItems}>\n                    <ul>\n                        {!!showAuthUserButtons\n                            ? renderAuthUserButtons()\n                            : renderNonAuthUserButtons()}\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    );\n};\n","import { createUseStyles } from 'react-jss';\nimport { ColorScheme } from '../../utils/theme';\n\nexport const useSideDrawerStyles = createUseStyles({\n    siderDrawer: {\n        height: '100%',\n        background: ColorScheme.WHITE,\n        boxShadow: '1px 0 7px rgba(0,0,0,0.5)',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '70%',\n        maxWidth: '280px',\n        zIndex: 200,\n        transform: 'translateX(-100%)',\n        transition: 'transform 0.3s ease-out',\n        '& ul': {\n            height: '100%',\n            listStyle: 'none',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        },\n        '& li': {\n            margin: '0.5rem 0',\n        },\n        '& a': {\n            color: ColorScheme.PRIMARY,\n            textDecoration: 'none',\n            fontSize: '1.2rem',\n        },\n        '& a:hover': {\n            color: ColorScheme.ORANGE,\n        },\n        '& a:active': {\n            color: ColorScheme.ORANGE,\n        },\n    },\n    open: {\n        transform: 'translateX(0)',\n    },\n    '@media (min-width: 769px)': {\n        siderDrawer: {\n            display: 'none',\n        },\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { useSideDrawerStyles } from './SideDrawer.style';\nimport { useMeQuery, useLogoutMutation } from '../../generated/graphql';\nimport { useHistory } from 'react-router-dom';\nimport { setAccessToken } from '../../utils/accessToken';\n\nconst authUserNavigationItems: string[] = ['Accounts', 'Insights', 'Logout'];\nconst nonAuthUserNavigationItems: string[] = ['Login', 'Sign Up'];\n\ninterface SideDrawerProps {\n    show: boolean;\n}\n\nexport const SideDrawer: React.FC<SideDrawerProps> = (props: SideDrawerProps) => {\n    const { data, loading } = useMeQuery();\n    const [logout, { client }] = useLogoutMutation();\n    const [showAuthUserNavigationItems, setShowAuthUserNavigationItems] = useState(false);\n    const history = useHistory();\n    const classes = useSideDrawerStyles();\n\n    useEffect(() => {\n        if (!loading && data && data.me) {\n            setShowAuthUserNavigationItems(true);\n        } else {\n            setShowAuthUserNavigationItems(false);\n        }\n    }, [data, loading]);\n\n    let drawerClasses = classes.siderDrawer;\n\n    if (props.show) {\n        drawerClasses = classes.siderDrawer + ' ' + classes.open;\n    }\n\n    const renderAuthUserNavigationItems = () => {\n        return (\n            <>\n                {authUserNavigationItems.map(item => {\n                    let routeTo: string = '/';\n                    let logOutClicked: boolean = false;\n\n                    switch (item) {\n                        case 'Accounts':\n                            routeTo = '/accounts';\n                            break;\n                        case 'Insights':\n                            routeTo = '/';\n                            break;\n                        case 'Logout':\n                            logOutClicked = true;\n                            break;\n                    }\n\n                    return (\n                        <li key={item}>\n                            <a\n                                href=\"/whatevs\"\n                                onClick={async e => {\n                                    e.preventDefault();\n                                    if (logOutClicked) {\n                                        await logout().then(() => history.push('/'));\n                                        setAccessToken('');\n                                        await client!.resetStore();\n                                    }\n                                    history.push(routeTo);\n                                }}\n                            >\n                                {item}\n                            </a>\n                        </li>\n                    );\n                })}\n            </>\n        );\n    };\n\n    const renderNonAuthUserNavigationItems = () => {\n        return (\n            <>\n                {nonAuthUserNavigationItems.map(item => {\n                    let routeTo: string = '/';\n\n                    switch (item) {\n                        case 'Login':\n                            routeTo = '/login';\n                            break;\n                        case 'Sign Up':\n                            routeTo = '/register';\n                            break;\n                    }\n\n                    return (\n                        <li key={item}>\n                            <a\n                                href=\"/whatevs\"\n                                onClick={e => {\n                                    e.preventDefault();\n                                    history.push(routeTo);\n                                }}\n                            >\n                                {item}\n                            </a>\n                        </li>\n                    );\n                })}\n            </>\n        );\n    };\n\n    return (\n        <nav className={drawerClasses}>\n            <ul>\n                {!!showAuthUserNavigationItems\n                    ? renderAuthUserNavigationItems()\n                    : renderNonAuthUserNavigationItems()}\n            </ul>\n        </nav>\n    );\n};\n","import { createUseStyles } from 'react-jss';\n\nexport const useBackdropStyles = createUseStyles({\n    backdrop: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        top: 0,\n        left: 0,\n        background: 'rgba(0,0,0,0.3)',\n        zIndex: 100,\n    },\n});\n","import React from 'react';\nimport { useBackdropStyles } from './Backdrop.style';\n\ninterface BackdropProps {\n    click(): void;\n}\n\nexport const Backdrop: React.FC<BackdropProps> = (props: BackdropProps) => {\n    const classes = useBackdropStyles();\n\n    return <div className={classes.backdrop} onClick={props.click} />;\n};\n","import React, { ComponentType, useState } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Home } from './pages/Home';\nimport { Register } from './components/Register/Register';\nimport { Login } from './components/Login/Login';\nimport { Accounts } from './components/Accounts/Accounts';\nimport { getAccessToken } from './utils/accessToken';\nimport { Account } from './components/Accounts/Account';\nimport { Toolbar } from './components/Toolbar/Toolbar';\nimport { SideDrawer } from './components/SideDrawer/SideDrawer';\nimport { Backdrop } from './components/Backdrop/Backdrop';\nimport { ColorScheme } from './utils/theme';\n\ninterface AuthenticatedRouteProps {\n    exact?: boolean;\n    path: string;\n    component: ComponentType<any>;\n}\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }: AuthenticatedRouteProps) => (\n    <Route\n        {...rest}\n        render={props =>\n            getAccessToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login' }} />\n        }\n    />\n);\n\nconst LoggedInRoute = ({ component: Component, ...rest }: AuthenticatedRouteProps) => (\n    <Route\n        {...rest}\n        render={props =>\n            getAccessToken() ? (\n                <Redirect to={{ pathname: '/accounts' }} />\n            ) : (\n                <Component {...props} />\n            )\n        }\n    />\n);\n\nexport const Routes: React.FC = () => {\n    const [sideDrawerOpen, setSideDrawerOpen] = useState(false);\n    let backdrop: any;\n\n    const drawerToggleClickHandler = () => {\n        setSideDrawerOpen(true);\n    };\n\n    const backdropClickHandler = () => {\n        setSideDrawerOpen(false);\n    };\n\n    if (sideDrawerOpen) {\n        backdrop = <Backdrop click={backdropClickHandler} />;\n    }\n\n    return (\n        <>\n            <Helmet>\n                <style>{`body { background-color: ${ColorScheme.WHITE}; }`}</style>\n            </Helmet>\n            <BrowserRouter>\n                <div style={{ height: '100%' }}>\n                    <Toolbar drawerClickHandler={drawerToggleClickHandler} />\n                    <SideDrawer show={sideDrawerOpen} />\n                    {backdrop}\n                    <main style={{ marginTop: 24 }}>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <LoggedInRoute exact path=\"/register\" component={Register} />\n                            <LoggedInRoute exact path=\"/login\" component={Login} />\n                            <AuthenticatedRoute exact path=\"/accounts\" component={Accounts} />\n                            <AuthenticatedRoute exact path=\"/accounts/:id\" component={Account} />\n                            <Route\n                                path=\"/\"\n                                render={() => (\n                                    <div\n                                        style={{\n                                            display: 'flex',\n                                            justifyContent: 'center',\n                                            marginTop: 12,\n                                        }}\n                                    >\n                                        404 Not Found\n                                    </div>\n                                )}\n                            />\n                        </Switch>\n                    </main>\n                </div>\n            </BrowserRouter>\n        </>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink, Observable } from 'apollo-link';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { getAccessToken, setAccessToken } from './utils/accessToken';\nimport { TokenRefreshLink } from 'apollo-link-token-refresh';\nimport jwtDecode from 'jwt-decode';\nimport { App } from './App';\n\nconst cache = new InMemoryCache({});\n\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    operation.setContext({\n                        headers: {\n                            authorization: accessToken ? `Bearer ${accessToken}` : '',\n                        },\n                    });\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        }),\n);\n\nconst client = new ApolloClient({\n    link: ApolloLink.from([\n        new TokenRefreshLink({\n            accessTokenField: 'accessToken',\n            isTokenValidOrUndefined: () => {\n                const token = getAccessToken();\n\n                if (!token) {\n                    return true;\n                }\n\n                try {\n                    const { exp } = jwtDecode(token);\n                    if (Date.now() >= exp * 1000) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                } catch {\n                    return false;\n                }\n            },\n            fetchAccessToken: () => {\n                return fetch((process.env.REACT_APP_SERVER_URL as string) + '/refresh_token', {\n                    method: 'POST',\n                    credentials: 'include',\n                });\n            },\n            handleFetch: accessToken => {\n                setAccessToken(accessToken);\n            },\n            handleError: err => {\n                console.warn('Your refresh token is invalid. Try to relogin');\n                console.error(err);\n            },\n        }),\n        onError(({ graphQLErrors, networkError }) => {\n            console.log(graphQLErrors);\n            console.log(networkError);\n        }),\n        requestLink,\n        new HttpLink({\n            uri: process.env.REACT_APP_SERVER_URL + '/graphql',\n            credentials: 'include',\n        }),\n    ]),\n    cache,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById('root'),\n);\n","import React, { useState, useEffect } from 'react';\nimport { Routes } from './Routes';\nimport { setAccessToken } from './utils/accessToken';\nimport { Loading } from './components/Loading/Loading';\n\nexport const App: React.FC = () => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch((process.env.REACT_APP_SERVER_URL as string) + '/refresh_token', {\n            method: 'POST',\n            credentials: 'include',\n        }).then(async res => {\n            const { accessToken } = await res.json();\n            setAccessToken(accessToken);\n            setLoading(false);\n        });\n    }, []);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    return <Routes />;\n};\n"],"sourceRoot":""}
{"version":3,"sources":["utils/accessToken.ts","generated/graphql.tsx","components/Loading/Loading.tsx","utils/theme.ts","pages/Home.tsx","schemas /registerValidationSchema.ts","components/Forms/FormTextField.tsx","components/Alerts/AlertMessage.tsx","components/Register/Register.style.ts","components/Register/Register.tsx","schemas /loginValidationSchema.ts","components/Login/Login.style.ts","components/Login/Login.tsx","components/Charts/Chart.tsx","components/Typography/Title.tsx","assets/world.svg","assets/flag.svg","assets/uk.svg","utils/currencies.ts","components/Accounts/Accounts.tsx","components/styles/cards/TransactionCard.style.ts","components/cards/TransactionCard.tsx","components/Accounts/Account.style.ts","components/Accounts/Account.tsx","components/Toolbar/Toolbar.style.ts","components/SideDrawer/DrawerToggleButton.style.ts","components/SideDrawer/DrawerToggleButton.tsx","components/Toolbar/Toolbar.tsx","components/SideDrawer/SideDrawer.style.ts","components/SideDrawer/SideDrawer.tsx","components/Backdrop/Backdrop.style.ts","components/Backdrop/Backdrop.tsx","Routes.tsx","index.tsx","App.tsx"],"names":["accessToken","getAccessToken","setAccessToken","token","AccountsDocument","gql","LoginDocument","LogoutDocument","useLogoutMutation","baseOptions","ApolloReactHooks","MeDocument","useMeQuery","RegisterDocument","UsersDocument","ColorScheme","Loading","style","display","justifyContent","src","alt","height","Home","data","fetchPolicy","users","map","x","key","id","email","firstName","lastName","theme","createMuiTheme","palette","primary","main","PRIMARY","secondary","ORANGE","contrastThreshold","tonalOffset","registerValidationSchema","yup","required","streetAddres","postCode","city","country","password","value","min","confirmPassword","oneOf","dateOfBirth","FormTextField","placeholder","className","type","props","useField","field","meta","errorText","error","touched","ThemeProvider","TextField","variant","helperText","AlertMessage","message","Alert","severity","useRegisterStyles","makeStyles","root","margin","top","width","headerText","textAlign","fontWeight","alignedFormContent","marginTop","alignedFormField","formField","formButton","textTransform","letterSpacing","loginText","margintop","spacer","Register","history","register","useState","alertMessage","setAlertMessage","classes","length","initialValues","validationSchema","onSubmit","a","setSubmitting","resetForm","variables","streetAddress","response","push","isSubmitting","onChange","name","Button","disabled","color","href","loginValidationSchema","useLoginStyles","registerText","Login","login","update","store","writeQuery","query","me","user","errorMessage","split","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Chart","Typography","component","gutterBottom","Title","fontSize","title","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref","svgRef","y","viewBox","enableBackground","xmlSpace","ref","cx","cy","r","points","ForwardRef","forwardRef","d","Currency","useStyles","content","flexGrow","overflow","container","paddingTop","spacing","paddingBottom","paper","padding","flexDirection","borderRadius","fixedHeight","accountCardHeight","chart","Accounts","loading","totalBalance","setTotalBalance","useHistory","accountCardHeightPaper","chartPaper","useEffect","balance","accounts","forEach","account","Container","maxWidth","marginBottom","Grid","item","xs","md","lg","Paper","svg","currencyIcon","fullCurrencyText","currency","EURO","DOLLAR","POUND","BITCOIN","alignItems","IconButton","onClick","e","preventDefault","pathname","state","Divider","light","useTransactionCardStyles","createStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","expandedText","TransactionCard","time","amount","card","fee","expanded","setExpanded","Card","CardHeader","avatar","Avatar","aria-label","subheader","CardActions","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","border","borderBottom","useAccountStyles","accountBalance","accountInfo","accountButtonsSection","accountButton","WHITE","accountButtonSection","accountButtonText","transactions","transactionsHeader","transactionCards","date","income","expenses","Transactions","transaction","index","Account","currencyFullText","location","undefined","useToolbarStyles","createUseStyles","toolbar","position","left","navigation","logo","textDecoration","toggleButton","navigationItems","listStyle","SECONDARY","navButton","cursor","HOVER","outline","flex","useDrawerToggleButtonStyles","background","boxSizing","toggleButtonLine","DrawerToggleButton","click","Toolbar","logout","client","showAuthUserButtons","setShowAuthUserButtons","drawerClickHandler","role","routeTo","then","resetStore","useSideDrawerStyles","siderDrawer","boxShadow","zIndex","open","authUserNavigationItems","nonAuthUserNavigationItems","SideDrawer","showAuthUserNavigationItems","setShowAuthUserNavigationItems","drawerClasses","show","logOutClicked","useBackdropStyles","backdrop","Backdrop","AuthenticatedRoute","Component","rest","render","to","LoggedInRoute","Routes","sideDrawerOpen","setSideDrawerOpen","Helmet","exact","path","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","setContext","headers","authorization","subscribe","next","bind","complete","catch","unsubscribe","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","exp","jwtDecode","Date","now","fetchAccessToken","fetch","process","method","credentials","handleFetch","handleError","err","console","warn","onError","graphQLErrors","networkError","log","HttpLink","uri","ReactDOM","setLoading","res","json","document","getElementById"],"mappings":"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","file":"static/js/main.b686e9fd.chunk.js","sourcesContent":["export let accessToken = '';\n\nexport const getAccessToken = () => {\n    return accessToken;\n};\n\nexport const setAccessToken = (token: string) => {\n    accessToken = token;\n};\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n};\n\nexport type Account = {\n   __typename?: 'Account',\n  id: Scalars['Int'],\n  currency: Scalars['String'],\n  balance: Scalars['Float'],\n};\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  accessToken: Scalars['String'],\n  user: User,\n};\n\nexport type Mutation = {\n   __typename?: 'Mutation',\n  logout: Scalars['Boolean'],\n  revokeRefreshTokensForUser: Scalars['Boolean'],\n  login: LoginResponse,\n  register: Scalars['Boolean'],\n  createAccount: Scalars['Boolean'],\n};\n\n\nexport type MutationRevokeRefreshTokensForUserArgs = {\n  userId: Scalars['Int']\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationRegisterArgs = {\n  country: Scalars['String'],\n  city: Scalars['String'],\n  postCode: Scalars['String'],\n  streetAddress: Scalars['String'],\n  dateOfBirth: Scalars['String'],\n  lastName: Scalars['String'],\n  firsName: Scalars['String'],\n  password: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationCreateAccountArgs = {\n  currency: Scalars['String']\n};\n\nexport type Query = {\n   __typename?: 'Query',\n  hello: Scalars['String'],\n  bye: Scalars['String'],\n  users: Array<User>,\n  me?: Maybe<User>,\n  accounts: Array<Account>,\n};\n\nexport type User = {\n   __typename?: 'User',\n  id: Scalars['Int'],\n  email: Scalars['String'],\n  firstName: Scalars['String'],\n  lastName: Scalars['String'],\n};\n\nexport type AccountsQueryVariables = {};\n\n\nexport type AccountsQuery = (\n  { __typename?: 'Query' }\n  & { accounts: Array<(\n    { __typename?: 'Account' }\n    & Pick<Account, 'id' | 'balance' | 'currency'>\n  )> }\n);\n\nexport type ByeQueryVariables = {};\n\n\nexport type ByeQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'bye'>\n);\n\nexport type CreateAccountMutationVariables = {\n  currency: Scalars['String']\n};\n\n\nexport type CreateAccountMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'createAccount'>\n);\n\nexport type HelloQueryVariables = {};\n\n\nexport type HelloQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'hello'>\n);\n\nexport type LoginMutationVariables = {\n  email: Scalars['String'],\n  password: Scalars['String']\n};\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'accessToken'>\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'email' | 'firstName' | 'lastName'>\n    ) }\n  ) }\n);\n\nexport type LogoutMutationVariables = {};\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type MeQueryVariables = {};\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'firstName' | 'lastName'>\n  )> }\n);\n\nexport type RegisterMutationVariables = {\n  email: Scalars['String'],\n  password: Scalars['String'],\n  firstName: Scalars['String'],\n  lastName: Scalars['String'],\n  dateOfBirth: Scalars['String'],\n  streetAddress: Scalars['String'],\n  postCode: Scalars['String'],\n  city: Scalars['String'],\n  country: Scalars['String']\n};\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'register'>\n);\n\nexport type UsersQueryVariables = {};\n\n\nexport type UsersQuery = (\n  { __typename?: 'Query' }\n  & { users: Array<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'firstName' | 'lastName'>\n  )> }\n);\n\n\nexport const AccountsDocument = gql`\n    query Accounts {\n  accounts {\n    id\n    balance\n    currency\n  }\n}\n    `;\n\n/**\n * __useAccountsQuery__\n *\n * To run a query within a React component, call `useAccountsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAccountsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAccountsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useAccountsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<AccountsQuery, AccountsQueryVariables>) {\n        return ApolloReactHooks.useQuery<AccountsQuery, AccountsQueryVariables>(AccountsDocument, baseOptions);\n      }\nexport function useAccountsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<AccountsQuery, AccountsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<AccountsQuery, AccountsQueryVariables>(AccountsDocument, baseOptions);\n        }\nexport type AccountsQueryHookResult = ReturnType<typeof useAccountsQuery>;\nexport type AccountsLazyQueryHookResult = ReturnType<typeof useAccountsLazyQuery>;\nexport type AccountsQueryResult = ApolloReactCommon.QueryResult<AccountsQuery, AccountsQueryVariables>;\nexport const ByeDocument = gql`\n    query Bye {\n  bye\n}\n    `;\n\n/**\n * __useByeQuery__\n *\n * To run a query within a React component, call `useByeQuery` and pass it any options that fit your needs.\n * When your component renders, `useByeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useByeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useByeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<ByeQuery, ByeQueryVariables>) {\n        return ApolloReactHooks.useQuery<ByeQuery, ByeQueryVariables>(ByeDocument, baseOptions);\n      }\nexport function useByeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<ByeQuery, ByeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<ByeQuery, ByeQueryVariables>(ByeDocument, baseOptions);\n        }\nexport type ByeQueryHookResult = ReturnType<typeof useByeQuery>;\nexport type ByeLazyQueryHookResult = ReturnType<typeof useByeLazyQuery>;\nexport type ByeQueryResult = ApolloReactCommon.QueryResult<ByeQuery, ByeQueryVariables>;\nexport const CreateAccountDocument = gql`\n    mutation CreateAccount($currency: String!) {\n  createAccount(currency: $currency)\n}\n    `;\nexport type CreateAccountMutationFn = ApolloReactCommon.MutationFunction<CreateAccountMutation, CreateAccountMutationVariables>;\n\n/**\n * __useCreateAccountMutation__\n *\n * To run a mutation, you first call `useCreateAccountMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAccountMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAccountMutation, { data, loading, error }] = useCreateAccountMutation({\n *   variables: {\n *      currency: // value for 'currency'\n *   },\n * });\n */\nexport function useCreateAccountMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateAccountMutation, CreateAccountMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreateAccountMutation, CreateAccountMutationVariables>(CreateAccountDocument, baseOptions);\n      }\nexport type CreateAccountMutationHookResult = ReturnType<typeof useCreateAccountMutation>;\nexport type CreateAccountMutationResult = ApolloReactCommon.MutationResult<CreateAccountMutation>;\nexport type CreateAccountMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateAccountMutation, CreateAccountMutationVariables>;\nexport const HelloDocument = gql`\n    query Hello {\n  hello\n}\n    `;\n\n/**\n * __useHelloQuery__\n *\n * To run a query within a React component, call `useHelloQuery` and pass it any options that fit your needs.\n * When your component renders, `useHelloQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHelloQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useHelloQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<HelloQuery, HelloQueryVariables>) {\n        return ApolloReactHooks.useQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\n      }\nexport function useHelloLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<HelloQuery, HelloQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<HelloQuery, HelloQueryVariables>(HelloDocument, baseOptions);\n        }\nexport type HelloQueryHookResult = ReturnType<typeof useHelloQuery>;\nexport type HelloLazyQueryHookResult = ReturnType<typeof useHelloLazyQuery>;\nexport type HelloQueryResult = ApolloReactCommon.QueryResult<HelloQuery, HelloQueryVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n      firstName\n      lastName\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout\n}\n    `;\nexport type LogoutMutationFn = ApolloReactCommon.MutationFunction<LogoutMutation, LogoutMutationVariables>;\n\n/**\n * __useLogoutMutation__\n *\n * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLogoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [logoutMutation, { data, loading, error }] = useLogoutMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useLogoutMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {\n        return ApolloReactHooks.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, baseOptions);\n      }\nexport type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;\nexport type LogoutMutationResult = ApolloReactCommon.MutationResult<LogoutMutation>;\nexport type LogoutMutationOptions = ApolloReactCommon.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;\nexport const MeDocument = gql`\n    query Me {\n  me {\n    id\n    email\n    firstName\n    lastName\n  }\n}\n    `;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\nexport const RegisterDocument = gql`\n    mutation Register($email: String!, $password: String!, $firstName: String!, $lastName: String!, $dateOfBirth: String!, $streetAddress: String!, $postCode: String!, $city: String!, $country: String!) {\n  register(email: $email, password: $password, firsName: $firstName, lastName: $lastName, dateOfBirth: $dateOfBirth, streetAddress: $streetAddress, postCode: $postCode, city: $city, country: $country)\n}\n    `;\nexport type RegisterMutationFn = ApolloReactCommon.MutationFunction<RegisterMutation, RegisterMutationVariables>;\n\n/**\n * __useRegisterMutation__\n *\n * To run a mutation, you first call `useRegisterMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRegisterMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [registerMutation, { data, loading, error }] = useRegisterMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      firstName: // value for 'firstName'\n *      lastName: // value for 'lastName'\n *      dateOfBirth: // value for 'dateOfBirth'\n *      streetAddress: // value for 'streetAddress'\n *      postCode: // value for 'postCode'\n *      city: // value for 'city'\n *      country: // value for 'country'\n *   },\n * });\n */\nexport function useRegisterMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RegisterMutation, RegisterMutationVariables>) {\n        return ApolloReactHooks.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument, baseOptions);\n      }\nexport type RegisterMutationHookResult = ReturnType<typeof useRegisterMutation>;\nexport type RegisterMutationResult = ApolloReactCommon.MutationResult<RegisterMutation>;\nexport type RegisterMutationOptions = ApolloReactCommon.BaseMutationOptions<RegisterMutation, RegisterMutationVariables>;\nexport const UsersDocument = gql`\n    query Users {\n  users {\n    id\n    email\n    firstName\n    lastName\n  }\n}\n    `;\n\n/**\n * __useUsersQuery__\n *\n * To run a query within a React component, call `useUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUsersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUsersQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UsersQuery, UsersQueryVariables>) {\n        return ApolloReactHooks.useQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n      }\nexport function useUsersLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UsersQuery, UsersQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n        }\nexport type UsersQueryHookResult = ReturnType<typeof useUsersQuery>;\nexport type UsersLazyQueryHookResult = ReturnType<typeof useUsersLazyQuery>;\nexport type UsersQueryResult = ApolloReactCommon.QueryResult<UsersQuery, UsersQueryVariables>;","import React from 'react';\n\nexport const Loading: React.FC = () => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n            }}\n        >\n            <img src=\"loading.svg\" alt=\"Loading...\" style={{ height: '124px' }} />\n        </div>\n    );\n};\n","import { createMuiTheme, Theme } from '@material-ui/core';\n\nexport enum ColorScheme {\n    PRIMARY = '#222B2D',\n    SECONDARY = '#29AABB',\n    ORANGE = '#F15742',\n    MAROON = '#432D32',\n    WHITE = '#FFFEF9',\n    HOVER = '#148C9C',\n}\n\n// For Material UI\nexport const theme: Theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: ColorScheme.PRIMARY,\n        },\n        secondary: {\n            main: ColorScheme.ORANGE,\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n    },\n});\n","import React from 'react';\nimport { useUsersQuery } from '../generated/graphql';\nimport { Loading } from '../components/Loading/Loading';\n\ninterface Props {}\n\nexport const Home: React.FC<Props> = () => {\n    const { data } = useUsersQuery({ fetchPolicy: 'network-only' });\n\n    if (!data) {\n        return <Loading />;\n    }\n\n    return (\n        <div>\n            <div>users: </div>\n            <ul>\n                {data.users.map(x => {\n                    return (\n                        <li key={x.id}>\n                            {x.id}, {x.email}, {x.firstName} {x.lastName}\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n","import * as yup from 'yup';\n\nexport const registerValidationSchema = yup.object({\n    firstName: yup.string().required('First name is required'),\n    lastName: yup.string().required('Last name is required'),\n    email: yup\n        .string()\n        .email()\n        .required('Email is required'),\n    streetAddres: yup.string().required('Street address is required'),\n    postCode: yup.string().required('Post code is required'),\n    city: yup.string().required('City is required'),\n    country: yup.string().required('Country is required'),\n    password: yup.lazy(value =>\n        !value\n            ? yup.string()\n            : yup\n                  .string()\n                  .min(6, 'Password must be at least 6 characters')\n                  .required('Password is required'),\n    ),\n    confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords do not match'),\n    dateOfBirth: yup.date().required('Date of birth is required'),\n});\n","import { FieldAttributes, useField } from 'formik';\nimport React from 'react';\nimport { ThemeProvider, TextField } from '@material-ui/core';\nimport { theme } from '../../utils/theme';\n\nexport const FormTextField: React.FC<FieldAttributes<{}>> = ({\n    placeholder,\n    className,\n    type,\n    ...props\n}) => {\n    const [field, meta] = useField<{}>(props);\n    const errorText = meta.error && meta.touched ? meta.error : '';\n\n    return (\n        <ThemeProvider theme={theme}>\n            <TextField\n                className={className}\n                type={type}\n                variant=\"outlined\"\n                required={true}\n                placeholder={placeholder}\n                {...field}\n                helperText={errorText}\n                error={!!errorText}\n            />\n        </ThemeProvider>\n    );\n};\n","import React from 'react';\nimport { Alert } from '@material-ui/lab';\n\ninterface AlertMessageProps {\n    message: string;\n}\n\nexport const AlertMessage: React.FC<AlertMessageProps> = ({ message }) => {\n    return (\n        <Alert variant=\"outlined\" severity=\"error\">\n            {message}\n        </Alert>\n    );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useRegisterStyles = makeStyles({\n    root: {\n        margin: '0 auto',\n        top: '25%',\n        height: '100%',\n        width: '348px',\n    },\n    headerText: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    alignedFormContent: {\n        marginTop: 12,\n        display: 'flex',\n        width: '100%',\n    },\n    alignedFormField: {\n        width: '50%',\n    },\n    formField: {\n        width: '100%',\n        marginTop: 12,\n    },\n    formButton: {\n        marginTop: 12,\n        textTransform: 'none',\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        textAlign: 'center',\n    },\n    loginText: {\n        margintop: 12,\n    },\n    spacer: {\n        width: 8,\n    },\n});\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport { useRegisterMutation } from '../../generated/graphql';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Button, ThemeProvider } from '@material-ui/core';\nimport { theme } from '../../utils/theme';\nimport { registerValidationSchema } from '../../schemas /registerValidationSchema';\nimport { FormTextField } from '../Forms/FormTextField';\nimport { AlertMessage } from '../Alerts/AlertMessage';\nimport { useRegisterStyles } from './Register.style';\n\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n    const [register] = useRegisterMutation();\n    const [alertMessage, setAlertMessage] = useState('');\n    const classes = useRegisterStyles();\n\n    return (\n        <div>\n            <div>\n                <h1 className={classes.headerText}>Sign Up</h1>\n            </div>\n            {alertMessage.length > 0 && (\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <AlertMessage message={alertMessage} />\n                </div>\n            )}\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    streetAddres: '',\n                    postCode: '',\n                    city: '',\n                    country: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: '',\n                    dateOfBirth: '',\n                }}\n                validationSchema={registerValidationSchema}\n                onSubmit={async (data, { setSubmitting, resetForm }) => {\n                    setSubmitting(true);\n\n                    const response = await register({\n                        variables: {\n                            firstName: data.firstName,\n                            lastName: data.lastName,\n                            email: data.email,\n                            password: data.password,\n                            streetAddress: data.streetAddres,\n                            postCode: data.postCode,\n                            city: data.city,\n                            country: data.country,\n                            dateOfBirth: data.dateOfBirth,\n                        },\n                    });\n\n                    if (response.data?.register) {\n                        history.push('/login');\n                        setSubmitting(false);\n                        resetForm();\n                    } else {\n                        setAlertMessage('User with that email already exists.');\n                        setSubmitting(false);\n                    }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <div className={classes.root}>\n                        <Form onChange={() => setAlertMessage('')}>\n                            <div className={classes.alignedFormContent}>\n                                <FormTextField\n                                    className={classes.alignedFormField}\n                                    name=\"firstName\"\n                                    placeholder=\"First name\"\n                                    type=\"input\"\n                                />\n                                <div className={classes.spacer} />\n                                <FormTextField\n                                    className={classes.alignedFormField}\n                                    name=\"lastName\"\n                                    placeholder=\"Last name\"\n                                    type=\"input\"\n                                />\n                            </div>\n                            <div>\n                                <div className={classes.alignedFormContent}>\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"streetAddres\"\n                                        placeholder=\"Street address\"\n                                        type=\"input\"\n                                    />\n                                    <div className={classes.spacer} />\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"postCode\"\n                                        placeholder=\"Post code\"\n                                        type=\"input\"\n                                    />\n                                </div>\n                                <div className={classes.alignedFormContent}>\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"city\"\n                                        placeholder=\"City\"\n                                        type=\"input\"\n                                    />\n                                    <div className={classes.spacer} />\n                                    <FormTextField\n                                        className={classes.alignedFormField}\n                                        name=\"country\"\n                                        placeholder=\"Country\"\n                                        type=\"input\"\n                                    />\n                                </div>\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    type=\"input\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"confirmPassword\"\n                                    placeholder=\"Confirm password\"\n                                    type=\"password\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"dateOfBirth\"\n                                    type=\"date\"\n                                />\n                            </div>\n                            <div className={classes.formButton}>\n                                <ThemeProvider theme={theme}>\n                                    <Button\n                                        className={classes.formButton}\n                                        disabled={isSubmitting}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        type=\"submit\"\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </ThemeProvider>\n                            </div>\n                            <div className={classes.loginText}>\n                                <p>\n                                    Already have an account? <a href=\"/login\">Login here.</a>\n                                </p>\n                            </div>\n                        </Form>\n                    </div>\n                )}\n            </Formik>\n        </div>\n    );\n};\n","import * as yup from 'yup';\n\nexport const loginValidationSchema = yup.object({\n    email: yup\n        .string()\n        .email()\n        .required('Email is required'),\n    password: yup.lazy(value =>\n        !value\n            ? yup.string()\n            : yup\n                  .string()\n                  .min(6, 'Password must be at least 6 characters')\n                  .required('Password is required'),\n    ),\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useLoginStyles = makeStyles({\n    root: {\n        margin: '0 auto',\n        top: '25%',\n        height: '100%',\n        width: '348px',\n    },\n    headerText: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    formField: {\n        width: '100%',\n        marginTop: 12,\n    },\n    formButton: {\n        marginTop: 12,\n        textTransform: 'none',\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        textAlign: 'center',\n    },\n    registerText: {\n        marginTop: 12,\n    },\n});\n","import React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useLoginMutation, MeDocument, MeQuery } from '../../generated/graphql';\nimport { setAccessToken } from '../../utils/accessToken';\nimport { Formik, Form } from 'formik';\nimport { FormTextField } from '../Forms/FormTextField';\nimport { Button, ThemeProvider } from '@material-ui/core';\nimport { theme } from '../../utils/theme';\nimport { loginValidationSchema } from '../../schemas /loginValidationSchema';\nimport { AlertMessage } from '../Alerts/AlertMessage';\nimport { useLoginStyles } from './Login.style';\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n    const [login] = useLoginMutation();\n    const [alertMessage, setAlertMessage] = useState('');\n    const classes = useLoginStyles();\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <h1 className={classes.headerText}>Login</h1>\n            </div>\n            {alertMessage.length > 0 && (\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <AlertMessage message={alertMessage} />\n                </div>\n            )}\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                validationSchema={loginValidationSchema}\n                onSubmit={async (data, { setSubmitting, resetForm }) => {\n                    setSubmitting(true);\n\n                    try {\n                        const response = await login({\n                            variables: {\n                                email: data.email,\n                                password: data.password,\n                            },\n                            update: (store, { data }) => {\n                                if (!data) {\n                                    return null;\n                                }\n                                store.writeQuery<MeQuery>({\n                                    query: MeDocument,\n                                    data: {\n                                        me: data.login.user,\n                                    },\n                                });\n                            },\n                        });\n\n                        if (response && response.data) {\n                            setAccessToken(response.data.login.accessToken);\n                            history.push('/dashboard');\n                            setSubmitting(false);\n                            resetForm();\n                        }\n                    } catch (error) {\n                        const errorMessage = error.message.split(':')[1];\n                        setAlertMessage(errorMessage);\n                        setSubmitting(false);\n                    }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <div>\n                        <Form>\n                            <div>\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    type=\"input\"\n                                />\n                                <FormTextField\n                                    className={classes.formField}\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                />\n                            </div>\n                            <div className={classes.formButton}>\n                                <ThemeProvider theme={theme}>\n                                    <Button\n                                        className={classes.formButton}\n                                        disabled={isSubmitting}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        type=\"submit\"\n                                    >\n                                        Login\n                                    </Button>\n                                </ThemeProvider>\n                            </div>\n                            <div className={classes.registerText}>\n                                <p>\n                                    Don't have an account? <a href=\"/register\">Sign up here.</a>\n                                </p>\n                            </div>\n                        </Form>\n                    </div>\n                )}\n            </Formik>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Typography, ThemeProvider } from '@material-ui/core';\nimport { theme, ColorScheme } from '../../utils/theme';\n\nconst data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'My First dataset',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 40],\n        },\n    ],\n};\nexport const Chart: React.FC = () => {\n    return (\n        <div>\n            <ThemeProvider theme={theme}>\n                <Typography\n                    style={{ fontWeight: 'bold', color: ColorScheme.PRIMARY }}\n                    component=\"h2\"\n                    variant=\"h6\"\n                    color=\"primary\"\n                    gutterBottom\n                >\n                    Today\n                </Typography>\n            </ThemeProvider>\n            <Line data={data} height={70} />\n        </div>\n    );\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { ColorScheme } from '../../utils/theme';\n\ninterface TitleProps {\n    title: string;\n    fontSize: number;\n}\n\nexport const Title: React.FC<TitleProps> = (props: TitleProps) => {\n    return (\n        <Typography\n            style={{ fontWeight: 'bold', fontSize: props.fontSize, color: ColorScheme.PRIMARY }}\n        >\n            {props.title}\n        </Typography>\n    );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgWorld = function SvgWorld(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"circle\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"g\", null, React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"256.001,100.174 264.29,125.683 291.11,125.683 269.411,141.448 277.7,166.957  256.001,151.191 234.301,166.957 242.59,141.448 220.891,125.683 247.712,125.683  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"145.814,145.814 169.714,157.99 188.679,139.026 184.482,165.516 208.381,177.693  181.89,181.889 177.694,208.381 165.517,184.482 139.027,188.679 157.992,169.714  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"100.175,256 125.684,247.711 125.684,220.89 141.448,242.59 166.958,234.301 151.191,256  166.958,277.699 141.448,269.411 125.684,291.11 125.684,264.289  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"145.814,366.186 157.991,342.286 139.027,323.321 165.518,327.519 177.693,303.62  181.89,330.111 208.38,334.307 184.484,346.484 188.679,372.974 169.714,354.009  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"256.001,411.826 247.711,386.317 220.891,386.317 242.591,370.552 234.301,345.045  256.001,360.809 277.7,345.045 269.411,370.552 291.11,386.317 264.289,386.317  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"366.187,366.186 342.288,354.01 323.322,372.975 327.519,346.483 303.622,334.307  330.112,330.111 334.308,303.62 346.484,327.519 372.974,323.321 354.009,342.288  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"411.826,256 386.317,264.289 386.317,291.11 370.552,269.41 345.045,277.699 360.81,256  345.045,234.301 370.553,242.59 386.317,220.89 386.317,247.712  \"\n  }), React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFDA44\"\n    },\n    points: \"366.187,145.814 354.01,169.714 372.975,188.679 346.483,184.481 334.308,208.38  330.112,181.889 303.622,177.692 327.519,165.516 323.322,139.027 342.289,157.991  \"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgWorld, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/world.7aea52bb.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgFlag = function SvgFlag(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"circle\", {\n    style: {\n      fill: \"#F0F0F0\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M244.87,256H512c0-23.106-3.08-45.49-8.819-66.783H244.87V256z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M244.87,122.435h229.556c-15.671-25.572-35.708-48.175-59.07-66.783H244.87V122.435z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M256,512c60.249,0,115.626-20.824,159.356-55.652H96.644C140.374,491.176,195.751,512,256,512z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M37.574,389.565h436.852c12.581-20.529,22.338-42.969,28.755-66.783H8.819 C15.236,346.596,24.993,369.036,37.574,389.565z\"\n  })), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M118.584,39.978h23.329l-21.7,15.765l8.289,25.509l-21.699-15.765L85.104,81.252l7.16-22.037 C73.158,75.13,56.412,93.776,42.612,114.552h7.475l-13.813,10.035c-2.152,3.59-4.216,7.237-6.194,10.938l6.596,20.301l-12.306-8.941 c-3.059,6.481-5.857,13.108-8.372,19.873l7.267,22.368h26.822l-21.7,15.765l8.289,25.509l-21.699-15.765l-12.998,9.444 C0.678,234.537,0,245.189,0,256h256c0-141.384,0-158.052,0-256C205.428,0,158.285,14.67,118.584,39.978z M128.502,230.4 l-21.699-15.765L85.104,230.4l8.289-25.509l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822l-21.7,15.765L128.502,230.4z  M120.213,130.317l8.289,25.509l-21.699-15.765l-21.699,15.765l8.289-25.509l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822 L120.213,130.317z M220.328,230.4l-21.699-15.765L176.93,230.4l8.289-25.509l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822 l-21.7,15.765L220.328,230.4z M212.039,130.317l8.289,25.509l-21.699-15.765l-21.699,15.765l8.289-25.509l-21.7-15.765h26.822 l8.288-25.509l8.288,25.509h26.822L212.039,130.317z M212.039,55.743l8.289,25.509l-21.699-15.765L176.93,81.252l8.289-25.509 l-21.7-15.765h26.822l8.288-25.509l8.288,25.509h26.822L212.039,55.743z\"\n  }), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgFlag, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/flag.36ab476e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgUk = function SvgUk(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"circle\", {\n    style: {\n      fill: \"#F0F0F0\"\n    },\n    cx: 256,\n    cy: 256,\n    r: 256\n  }), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M52.92,100.142c-20.109,26.163-35.272,56.318-44.101,89.077h133.178L52.92,100.142z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M503.181,189.219c-8.829-32.758-23.993-62.913-44.101-89.076l-89.075,89.076H503.181z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M8.819,322.784c8.83,32.758,23.993,62.913,44.101,89.075l89.074-89.075L8.819,322.784L8.819,322.784 z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M411.858,52.921c-26.163-20.109-56.317-35.272-89.076-44.102v133.177L411.858,52.921z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M100.142,459.079c26.163,20.109,56.318,35.272,89.076,44.102V370.005L100.142,459.079z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M189.217,8.819c-32.758,8.83-62.913,23.993-89.075,44.101l89.075,89.075V8.819z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M322.783,503.181c32.758-8.83,62.913-23.993,89.075-44.101l-89.075-89.075V503.181z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#0052B4\"\n    },\n    d: \"M370.005,322.784l89.075,89.076c20.108-26.162,35.272-56.318,44.101-89.076H370.005z\"\n  })), React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M509.833,222.609h-220.44h-0.001V2.167C278.461,0.744,267.317,0,256,0 c-11.319,0-22.461,0.744-33.391,2.167v220.44v0.001H2.167C0.744,233.539,0,244.683,0,256c0,11.319,0.744,22.461,2.167,33.391 h220.44h0.001v220.442C233.539,511.256,244.681,512,256,512c11.317,0,22.461-0.743,33.391-2.167v-220.44v-0.001h220.442 C511.256,278.461,512,267.319,512,256C512,244.683,511.256,233.539,509.833,222.609z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M322.783,322.784L322.783,322.784L437.019,437.02c5.254-5.252,10.266-10.743,15.048-16.435 l-97.802-97.802h-31.482V322.784z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M189.217,322.784h-0.002L74.98,437.019c5.252,5.254,10.743,10.266,16.435,15.048l97.802-97.804 V322.784z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M189.217,189.219v-0.002L74.981,74.98c-5.254,5.252-10.266,10.743-15.048,16.435l97.803,97.803 H189.217z\"\n  }), React.createElement(\"path\", {\n    style: {\n      fill: \"#D80027\"\n    },\n    d: \"M322.783,189.219L322.783,189.219L437.02,74.981c-5.252-5.254-10.743-10.266-16.435-15.047 l-97.802,97.803V189.219z\"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgUk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/uk.e5564902.svg\";\nexport { ForwardRef as ReactComponent };","export enum Currency {\n    EURO = 'EUR',\n    POUND = 'GBP',\n    DOLLAR = 'USD',\n    BITCOIN = 'BTC',\n}\n","import React, { MouseEvent, useState, useEffect } from 'react';\nimport {\n    Container,\n    Grid,\n    Paper,\n    makeStyles,\n    Typography,\n    Divider,\n    IconButton,\n} from '@material-ui/core';\nimport { Chart } from '../Charts/Chart';\nimport { Title } from '../Typography/Title';\nimport { ReactComponent as Euro } from '../../assets/world.svg';\nimport { ReactComponent as Dollar } from '../../assets/flag.svg';\nimport { ReactComponent as Pound } from '../../assets/uk.svg';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useAccountsQuery } from '../../generated/graphql';\nimport { Loading } from '../Loading/Loading';\nimport { Currency } from '../../utils/currencies';\nimport { useHistory } from 'react-router-dom';\nimport { ColorScheme } from '../../utils/theme';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        fontWeight: 'bold',\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        borderRadius: 8,\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    accountCardHeight: {\n        height: 172,\n    },\n    chart: {\n        height: '100%',\n    },\n}));\n\nexport const Accounts: React.FC = () => {\n    const { data, loading } = useAccountsQuery();\n    const [totalBalance, setTotalBalance] = useState(0);\n    const history = useHistory();\n    const classes = useStyles();\n\n    const accountCardHeightPaper = classes.paper + ' ' + classes.accountCardHeight;\n    const chartPaper = classes.paper + ' ' + classes.chart;\n\n    useEffect(() => {\n        let balance = 0;\n        if (data) {\n            data.accounts.forEach(account => {\n                balance += account.balance;\n            });\n        }\n        setTotalBalance(balance);\n    }, [loading, data]);\n\n    if (!data) {\n        return <Loading />;\n    }\n\n    return (\n        <div className={classes.root}>\n            <main className={classes.content}>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div style={{ marginBottom: 12 }}>\n                        <Title title=\"Stats\" fontSize={24} />\n                    </div>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Paper className={chartPaper}>\n                                <Chart />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <div\n                        style={{\n                            marginBottom: 12,\n                            marginTop: 12,\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                        }}\n                    >\n                        <div>\n                            <Title title=\"Accounts\" fontSize={24} />\n                        </div>\n                        <div\n                            style={{\n                                fontSize: 18,\n                                fontWeight: 'bold',\n                                color: 'rgba(0, 0, 0, 0.3)',\n                            }}\n                        >\n                            Total balance: £{totalBalance}\n                        </div>\n                    </div>\n                    <Grid container spacing={3}>\n                        {data.accounts.map(account => {\n                            let svg: any | string;\n                            let currencyIcon: string = '';\n                            let fullCurrencyText: string = '';\n\n                            switch (account.currency) {\n                                case Currency.EURO:\n                                    svg = <Euro />;\n                                    currencyIcon = '€';\n                                    fullCurrencyText = 'Euro';\n                                    break;\n                                case Currency.DOLLAR:\n                                    svg = <Dollar />;\n                                    currencyIcon = '＄';\n                                    fullCurrencyText = 'US Dollar';\n                                    break;\n                                case Currency.POUND:\n                                    svg = <Pound />;\n                                    currencyIcon = '£';\n                                    fullCurrencyText = 'British Pound';\n                                    break;\n                                case Currency.BITCOIN:\n                                    svg = '';\n                                    currencyIcon = '฿';\n                                    fullCurrencyText = 'Bitcoin';\n                                    break;\n                            }\n\n                            return (\n                                <Grid key={account.id} item xs={12} md={4} lg={4}>\n                                    <Paper className={accountCardHeightPaper}>\n                                        <div\n                                            style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between',\n                                                alignItems: 'center',\n                                            }}\n                                        >\n                                            <div style={{ width: 32 }}>\n                                                {!!svg ? (\n                                                    svg\n                                                ) : (\n                                                    <img\n                                                        src=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\"\n                                                        alt=\"...\"\n                                                        style={{ width: 32 }}\n                                                    />\n                                                )}\n                                            </div>\n                                            <Title title={fullCurrencyText} fontSize={18} />\n                                            <div>\n                                                <IconButton\n                                                    style={{ color: ColorScheme.PRIMARY }}\n                                                    onClick={(e: MouseEvent<HTMLButtonElement>) => {\n                                                        e.preventDefault();\n                                                        history.push({\n                                                            pathname: `/accounts/${account.id}`,\n                                                            state: account,\n                                                        });\n                                                    }}\n                                                >\n                                                    <NavigateNextIcon fontSize=\"small\" />\n                                                </IconButton>\n                                            </div>\n                                        </div>\n                                        <Typography\n                                            style={{ margin: '0 auto', marginTop: '24px' }}\n                                            component=\"p\"\n                                            variant=\"h4\"\n                                        >\n                                            {currencyIcon}\n                                            {account.balance}\n                                        </Typography>\n                                        <Divider style={{ marginTop: 24 }} light />\n                                        <Typography\n                                            style={{\n                                                marginTop: '14px',\n                                                letterSpacing: 1,\n                                                color: 'rgba(0, 0, 0, 0.3)',\n                                            }}\n                                            component=\"p\"\n                                        >\n                                            XXXX APL0 0099 YYYY ZZZZ 78\n                                        </Typography>\n                                    </Paper>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </Container>\n            </main>\n        </div>\n    );\n};\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nexport const useTransactionCardStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {},\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        expandedText: {\n            fontSize: 14,\n            marginBottom: 8,\n        },\n    }),\n);\n","import React, { useState } from 'react';\nimport {\n    Avatar,\n    Card,\n    CardHeader,\n    Collapse,\n    CardContent,\n    IconButton,\n    CardActions,\n    ThemeProvider,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { theme } from '../../utils/theme';\nimport { useTransactionCardStyles } from '../styles/cards/TransactionCard.style';\n\ninterface TransactionCardProps {\n    title: string;\n    amount: number;\n    time: string;\n    card?: number;\n    fee?: number;\n}\n\nexport const TransactionCard: React.FC<TransactionCardProps> = ({\n    title,\n    time,\n    amount,\n    card,\n    fee,\n}) => {\n    const classes = useTransactionCardStyles();\n    const [expanded, setExpanded] = useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <div style={{ marginTop: 12 }}>\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={<Avatar aria-label=\"whatever\">R</Avatar>}\n                    title={title}\n                    subheader={time}\n                    style={{ textAlign: 'left' }}\n                />\n                <CardActions style={{ marginTop: '-40px' }}>\n                    <ThemeProvider theme={theme}>\n                        <IconButton\n                            style={{ marginLeft: 420 }}\n                            color=\"primary\"\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </ThemeProvider>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent style={{ marginTop: '-24px' }}>\n                        <hr\n                            style={{\n                                border: 'none',\n                                borderBottom: `1px solid black`,\n                            }}\n                        />\n                        <div className={classes.expandedText} style={{ marginTop: 12 }}>\n                            Apollo card: <span style={{ color: 'black' }}>*{card}</span>\n                        </div>\n                        <div className={classes.expandedText}>\n                            Spent: <span style={{ color: 'black' }}>£{amount}</span>\n                        </div>\n                        <div className={classes.expandedText}>\n                            Fee: <span style={{ color: 'black' }}>{fee}</span>\n                        </div>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { ColorScheme } from '../../utils/theme';\n\nexport const useAccountStyles = makeStyles({\n    root: {\n        margin: '0 auto',\n        marginTop: 24,\n    },\n    accountBalance: {\n        fontSize: 28,\n        textAlign: 'center',\n    },\n    accountInfo: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        width: '240px',\n        margin: '0 auto',\n        marginTop: 12,\n        alignItems: 'center',\n    },\n    accountButtonsSection: {\n        textAlign: 'center',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '0 auto',\n        width: '480px',\n        marginTop: 24,\n    },\n    accountButton: {\n        backgroundColor: ColorScheme.PRIMARY,\n        color: ColorScheme.WHITE,\n\n        width: 32,\n        height: 32,\n    },\n    accountButtonSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    accountButtonText: {\n        marginTop: 12,\n        fontSize: 14,\n    },\n    transactions: {\n        marginTop: 12,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        width: 480,\n    },\n    transactionsHeader: {\n        marginTop: 12,\n        display: 'flex',\n    },\n    transactionCards: {\n        marginTop: 8,\n    },\n});\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ThemeProvider, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SwapVert from '@material-ui/icons/SwapVert';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { ReactComponent as Euro } from '../../assets/world.svg';\nimport { ReactComponent as Dollar } from '../../assets/flag.svg';\nimport { ReactComponent as Pound } from '../../assets/uk.svg';\nimport { theme } from '../../utils/theme';\nimport { TransactionCard } from '../cards/TransactionCard';\nimport { useAccountStyles } from './Account.style';\n\ninterface Transaction {\n    date: string;\n    title: string;\n    time: string;\n    income: number;\n    expenses: number;\n}\n\nlet transactions: Transaction[] = [];\n\ntransactions.push(\n    {\n        date: 'Today',\n        title: 'Asda Aberdeen Beach Superstore',\n        time: '15:52',\n        income: 0,\n        expenses: 24.28,\n    },\n    {\n        date: 'Today',\n        title: 'Robert Gordon University',\n        time: '12:30',\n        income: 0,\n        expenses: 3.79,\n    },\n    {\n        date: 'Today',\n        title: 'Robert Gordon University',\n        time: '12:30',\n        income: 0,\n        expenses: 3.79,\n    },\n    {\n        date: 'Today',\n        title: 'Robert Gordon University',\n        time: '12:30',\n        income: 0,\n        expenses: 3.79,\n    },\n    {\n        date: 'Today',\n        title: 'Robert Gordon University',\n        time: '12:30',\n        income: 0,\n        expenses: 3.79,\n    },\n);\n\nconst Transactions = (): JSX.Element => {\n    const classes = useAccountStyles();\n\n    return (\n        <div>\n            <div className={classes.transactions}>\n                <div className={classes.transactionsHeader}>Today</div>\n                <div className={classes.transactionCards}>\n                    {transactions.map((transaction, index) => {\n                        return (\n                            <TransactionCard\n                                key={index}\n                                title={transaction.title}\n                                time={transaction.time}\n                                card={6254}\n                                fee={0}\n                                amount={\n                                    !!transaction.expenses\n                                        ? transaction.expenses\n                                        : transaction.income\n                                }\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const Account: React.FC = () => {\n    const history = useHistory<any>();\n    const classes = useAccountStyles();\n\n    let currencyIcon: string = '';\n    let currencyFullText: string = '';\n    let svg: any | string;\n\n    switch (history.location.state.currency) {\n        case 'EUR':\n            currencyIcon = '€';\n            currencyFullText = 'Euro';\n            svg = <Euro />;\n            break;\n        case 'USD':\n            currencyIcon = '$';\n            currencyFullText = 'US Dollar';\n            svg = <Dollar />;\n            break;\n        case 'GBP':\n            currencyIcon = '£';\n            currencyFullText = 'British Pound';\n            svg = <Pound />;\n            break;\n        case 'BTC':\n            currencyIcon = '฿';\n            currencyFullText = 'Bitcoin';\n            svg = undefined;\n            break;\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.accountBalance}>\n                {currencyIcon}\n                {history.location.state.balance}\n            </div>\n            <div className={classes.accountInfo}>\n                <div>{currencyFullText}</div>\n                <div style={{ width: 32 }}>\n                    {!!svg ? (\n                        svg\n                    ) : (\n                        <img\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\"\n                            alt=\"...\"\n                            style={{ width: 32 }}\n                        />\n                    )}\n                </div>\n                <div>{history.location.state.currency}</div>\n            </div>\n            <div className={classes.accountButtonsSection}>\n                <ThemeProvider theme={theme}>\n                    <div>\n                        <IconButton className={classes.accountButton} aria-label=\"Add\">\n                            <AddIcon />\n                        </IconButton>\n                        <div className={classes.accountButtonText}>Add</div>\n                    </div>\n                    <div>\n                        <IconButton className={classes.accountButton} aria-label=\"Exchange\">\n                            <SwapVert />\n                        </IconButton>\n                        <div className={classes.accountButtonText}>Exchange</div>\n                    </div>\n                    <div>\n                        <IconButton className={classes.accountButton} aria-label=\"Details\">\n                            <InfoOutlinedIcon />\n                        </IconButton>\n                        <div className={classes.accountButtonText}>Details</div>\n                    </div>\n                </ThemeProvider>\n            </div>\n            <hr style={{ width: 480, marginTop: 24, color: '#fcfcfc' }} />\n            <Transactions />\n        </div>\n    );\n};\n","import { createUseStyles } from 'react-jss';\nimport { ColorScheme } from '../../utils/theme';\n\nexport const useToolbarStyles = createUseStyles({\n    toolbar: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '56px',\n        backgroundColor: ColorScheme.PRIMARY,\n    },\n    navigation: {\n        display: 'flex',\n        height: '100%',\n        alignItems: 'center',\n        padding: '0 1rem',\n    },\n    logo: {\n        textTransform: 'uppercase',\n        letterSpacing: 2,\n        marginLeft: '1.5rem',\n        '& a': {\n            color: ColorScheme.WHITE,\n            textDecoration: 'none',\n            fontSize: '1.5rem',\n        },\n    },\n    toggleButton: {},\n    navigationItems: {\n        '& ul': {\n            listStyle: 'none',\n            margin: 0,\n            padding: 0,\n            display: 'flex',\n            alignItems: 'center',\n        },\n        '& li': {\n            padding: '0 0.5rem',\n        },\n        '& a': {\n            color: ColorScheme.WHITE,\n            letterSpacing: 1,\n            textDecoration: 'none',\n            fontWeight: 'bold',\n        },\n        '& a:hover': {\n            color: ColorScheme.SECONDARY,\n        },\n        '& a:active': {\n            color: ColorScheme.SECONDARY,\n        },\n    },\n    navButton: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        marginLeft: '1rem',\n        height: 32,\n        width: 102,\n        borderRadius: 4,\n        border: 'none',\n        backgroundColor: ColorScheme.SECONDARY,\n        color: ColorScheme.WHITE,\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: ColorScheme.HOVER,\n        },\n        '&:focus': {\n            outline: 0,\n        },\n    },\n    spacer: {\n        flex: 1,\n    },\n    '@media (max-width: 768px)': {\n        navigationItems: {\n            display: 'none',\n        },\n    },\n    '@media (min-width: 769px)': {\n        toggleButton: {\n            display: 'none',\n        },\n        logo: {\n            marginLeft: 0,\n        },\n    },\n});\n","import { createUseStyles } from 'react-jss';\n\nexport const useDrawerToggleButtonStyles = createUseStyles({\n    toggleButton: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        height: '24px',\n        width: '28px',\n        background: 'transparent',\n        cursor: 'pointer',\n        padding: 0,\n        border: 'none',\n        boxSizing: 'border-box',\n        '& :focus': {\n            outline: 'none',\n        },\n    },\n    toggleButtonLine: {\n        width: '30px',\n        height: '2px',\n        background: 'white',\n    },\n});\n","import React from 'react';\nimport { useDrawerToggleButtonStyles } from './DrawerToggleButton.style';\n\ninterface DrawerToggleButtonProps {\n    click(): void;\n}\n\nexport const DrawerToggleButton: React.FC<DrawerToggleButtonProps> = (\n    props: DrawerToggleButtonProps,\n) => {\n    const classes = useDrawerToggleButtonStyles();\n\n    return (\n        <button className={classes.toggleButton} onClick={props.click}>\n            <div className={classes.toggleButtonLine} />\n            <div className={classes.toggleButtonLine} />\n            <div className={classes.toggleButtonLine} />\n        </button>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useToolbarStyles } from './Toolbar.style';\nimport { DrawerToggleButton } from '../SideDrawer/DrawerToggleButton';\nimport { useMeQuery, useLogoutMutation } from '../../generated/graphql';\nimport { useHistory } from 'react-router-dom';\nimport { setAccessToken } from '../../utils/accessToken';\n\ninterface ToolbarProps {\n    drawerClickHandler(): void;\n}\n\nconst navigationItems: string[] = ['Accounts', 'Insights'];\n\nexport const Toolbar: React.FC<ToolbarProps> = (props: ToolbarProps) => {\n    const { data, loading } = useMeQuery();\n    const [logout, { client }] = useLogoutMutation();\n    const [showAuthUserButtons, setShowAuthUserButtons] = useState(false);\n    const history = useHistory();\n    const classes = useToolbarStyles();\n\n    useEffect(() => {\n        if (!loading && data && data.me) {\n            setShowAuthUserButtons(true);\n        } else {\n            setShowAuthUserButtons(false);\n        }\n    }, [data, loading]);\n\n    const renderAuthUserButtons = () => {\n        return (\n            <>\n                {navigationItems.map(item => {\n                    let routeTo: string = '/';\n\n                    switch (item) {\n                        case 'Accounts':\n                            routeTo = '/accounts';\n                            break;\n                        case 'Insights':\n                            routeTo = '/';\n                            break;\n                    }\n                    return (\n                        <li key={item}>\n                            <a href={routeTo}>{item}</a>\n                        </li>\n                    );\n                })}\n                <button\n                    className={classes.navButton}\n                    onClick={async e => {\n                        e.preventDefault();\n                        await logout().then(() => history.push('/'));\n                        setAccessToken('');\n                        await client!.resetStore();\n                    }}\n                >\n                    Logout\n                </button>\n            </>\n        );\n    };\n\n    const renderNonAuthUserButtons = () => {\n        return (\n            <>\n                <button\n                    className={classes.navButton}\n                    onClick={e => {\n                        e.preventDefault();\n                        history.push('/login');\n                    }}\n                >\n                    Login\n                </button>\n                <button\n                    className={classes.navButton}\n                    onClick={e => {\n                        e.preventDefault();\n                        history.push('/register');\n                    }}\n                >\n                    Sign Up\n                </button>\n            </>\n        );\n    };\n\n    return (\n        <header className={classes.toolbar}>\n            <nav className={classes.navigation}>\n                <div className={classes.toggleButton}>\n                    <DrawerToggleButton click={props.drawerClickHandler} />\n                </div>\n                <div className={classes.logo}>\n                    <a href=\"/\">\n                        <span role=\"img\" aria-label=\"logo\">\n                            🚀\n                        </span>\n                    </a>\n                </div>\n                <div className={classes.spacer} />\n                <div className={classes.navigationItems}>\n                    <ul>\n                        {!!showAuthUserButtons\n                            ? renderAuthUserButtons()\n                            : renderNonAuthUserButtons()}\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    );\n};\n","import { createUseStyles } from 'react-jss';\nimport { ColorScheme } from '../../utils/theme';\n\nexport const useSideDrawerStyles = createUseStyles({\n    siderDrawer: {\n        height: '100%',\n        background: ColorScheme.WHITE,\n        boxShadow: '1px 0 7px rgba(0,0,0,0.5)',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '70%',\n        maxWidth: '280px',\n        zIndex: 200,\n        transform: 'translateX(-100%)',\n        transition: 'transform 0.3s ease-out',\n        '& ul': {\n            height: '100%',\n            listStyle: 'none',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        },\n        '& li': {\n            margin: '0.5rem 0',\n        },\n        '& a': {\n            color: ColorScheme.PRIMARY,\n            textDecoration: 'none',\n            fontSize: '1.2rem',\n        },\n        '& a:hover': {\n            color: ColorScheme.ORANGE,\n        },\n        '& a:active': {\n            color: ColorScheme.ORANGE,\n        },\n    },\n    open: {\n        transform: 'translateX(0)',\n    },\n    '@media (min-width: 769px)': {\n        siderDrawer: {\n            display: 'none',\n        },\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport { useSideDrawerStyles } from './SideDrawer.style';\nimport { useMeQuery, useLogoutMutation } from '../../generated/graphql';\nimport { useHistory } from 'react-router-dom';\nimport { setAccessToken } from '../../utils/accessToken';\n\nconst authUserNavigationItems: string[] = ['Accounts', 'Insights', 'Logout'];\nconst nonAuthUserNavigationItems: string[] = ['Login', 'Sign Up'];\n\ninterface SideDrawerProps {\n    show: boolean;\n}\n\nexport const SideDrawer: React.FC<SideDrawerProps> = (props: SideDrawerProps) => {\n    const { data, loading } = useMeQuery();\n    const [logout, { client }] = useLogoutMutation();\n    const [showAuthUserNavigationItems, setShowAuthUserNavigationItems] = useState(false);\n    const history = useHistory();\n    const classes = useSideDrawerStyles();\n\n    useEffect(() => {\n        if (!loading && data && data.me) {\n            setShowAuthUserNavigationItems(true);\n        } else {\n            setShowAuthUserNavigationItems(false);\n        }\n    }, [data, loading]);\n\n    let drawerClasses = classes.siderDrawer;\n\n    if (props.show) {\n        drawerClasses = classes.siderDrawer + ' ' + classes.open;\n    }\n\n    const renderAuthUserNavigationItems = () => {\n        return (\n            <>\n                {authUserNavigationItems.map(item => {\n                    let routeTo: string = '/';\n                    let logOutClicked: boolean = false;\n\n                    switch (item) {\n                        case 'Accounts':\n                            routeTo = '/accounts';\n                            break;\n                        case 'Insights':\n                            routeTo = '/';\n                            break;\n                        case 'Logout':\n                            logOutClicked = true;\n                            break;\n                    }\n\n                    return (\n                        <li key={item}>\n                            <a\n                                href=\"/whatevs\"\n                                onClick={async e => {\n                                    e.preventDefault();\n                                    if (logOutClicked) {\n                                        await logout().then(() => history.push('/'));\n                                        setAccessToken('');\n                                        await client!.resetStore();\n                                    }\n                                    history.push(routeTo);\n                                }}\n                            >\n                                {item}\n                            </a>\n                        </li>\n                    );\n                })}\n            </>\n        );\n    };\n\n    const renderNonAuthUserNavigationItems = () => {\n        return (\n            <>\n                {nonAuthUserNavigationItems.map(item => {\n                    let routeTo: string = '/';\n\n                    switch (item) {\n                        case 'Login':\n                            routeTo = '/login';\n                            break;\n                        case 'Sign Up':\n                            routeTo = '/register';\n                            break;\n                    }\n\n                    return (\n                        <li key={item}>\n                            <a\n                                href=\"/whatevs\"\n                                onClick={e => {\n                                    e.preventDefault();\n                                    history.push(routeTo);\n                                }}\n                            >\n                                {item}\n                            </a>\n                        </li>\n                    );\n                })}\n            </>\n        );\n    };\n\n    return (\n        <nav className={drawerClasses}>\n            <ul>\n                {!!showAuthUserNavigationItems\n                    ? renderAuthUserNavigationItems()\n                    : renderNonAuthUserNavigationItems()}\n            </ul>\n        </nav>\n    );\n};\n","import { createUseStyles } from 'react-jss';\n\nexport const useBackdropStyles = createUseStyles({\n    backdrop: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        top: 0,\n        left: 0,\n        background: 'rgba(0,0,0,0.3)',\n        zIndex: 100,\n    },\n});\n","import React from 'react';\nimport { useBackdropStyles } from './Backdrop.style';\n\ninterface BackdropProps {\n    click(): void;\n}\n\nexport const Backdrop: React.FC<BackdropProps> = (props: BackdropProps) => {\n    const classes = useBackdropStyles();\n\n    return <div className={classes.backdrop} onClick={props.click} />;\n};\n","import React, { ComponentType, useState } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Home } from './pages/Home';\nimport { Register } from './components/Register/Register';\nimport { Login } from './components/Login/Login';\nimport { Accounts } from './components/Accounts/Accounts';\nimport { getAccessToken } from './utils/accessToken';\nimport { Account } from './components/Accounts/Account';\nimport { Toolbar } from './components/Toolbar/Toolbar';\nimport { SideDrawer } from './components/SideDrawer/SideDrawer';\nimport { Backdrop } from './components/Backdrop/Backdrop';\nimport { ColorScheme } from './utils/theme';\n\ninterface AuthenticatedRouteProps {\n    exact?: boolean;\n    path: string;\n    component: ComponentType<any>;\n}\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }: AuthenticatedRouteProps) => (\n    <Route\n        {...rest}\n        render={props =>\n            getAccessToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login' }} />\n        }\n    />\n);\n\nconst LoggedInRoute = ({ component: Component, ...rest }: AuthenticatedRouteProps) => (\n    <Route\n        {...rest}\n        render={props =>\n            getAccessToken() ? (\n                <Redirect to={{ pathname: '/accounts' }} />\n            ) : (\n                <Component {...props} />\n            )\n        }\n    />\n);\n\nexport const Routes: React.FC = () => {\n    const [sideDrawerOpen, setSideDrawerOpen] = useState(false);\n    let backdrop: any;\n\n    const drawerToggleClickHandler = () => {\n        setSideDrawerOpen(true);\n    };\n\n    const backdropClickHandler = () => {\n        setSideDrawerOpen(false);\n    };\n\n    if (sideDrawerOpen) {\n        backdrop = <Backdrop click={backdropClickHandler} />;\n    }\n\n    return (\n        <>\n            <Helmet>\n                <style>{`body { background-color: ${ColorScheme.WHITE}; }`}</style>\n            </Helmet>\n            <BrowserRouter>\n                <div style={{ height: '100%' }}>\n                    <Toolbar drawerClickHandler={drawerToggleClickHandler} />\n                    <SideDrawer show={sideDrawerOpen} />\n                    {backdrop}\n                    <main style={{ marginTop: 84 }}>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <LoggedInRoute exact path=\"/register\" component={Register} />\n                            <LoggedInRoute exact path=\"/login\" component={Login} />\n                            <AuthenticatedRoute exact path=\"/accounts\" component={Accounts} />\n                            <AuthenticatedRoute exact path=\"/accounts/:id\" component={Account} />\n                            <Route\n                                path=\"/\"\n                                render={() => (\n                                    <div\n                                        style={{\n                                            display: 'flex',\n                                            justifyContent: 'center',\n                                            marginTop: 12,\n                                        }}\n                                    >\n                                        404 Not Found\n                                    </div>\n                                )}\n                            />\n                        </Switch>\n                    </main>\n                </div>\n            </BrowserRouter>\n        </>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink, Observable } from 'apollo-link';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { getAccessToken, setAccessToken } from './utils/accessToken';\nimport { TokenRefreshLink } from 'apollo-link-token-refresh';\nimport jwtDecode from 'jwt-decode';\nimport { App } from './App';\n\nconst cache = new InMemoryCache({});\n\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    operation.setContext({\n                        headers: {\n                            authorization: accessToken ? `Bearer ${accessToken}` : '',\n                        },\n                    });\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        }),\n);\n\nconst client = new ApolloClient({\n    link: ApolloLink.from([\n        new TokenRefreshLink({\n            accessTokenField: 'accessToken',\n            isTokenValidOrUndefined: () => {\n                const token = getAccessToken();\n\n                if (!token) {\n                    return true;\n                }\n\n                try {\n                    const { exp } = jwtDecode(token);\n                    if (Date.now() >= exp * 1000) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                } catch {\n                    return false;\n                }\n            },\n            fetchAccessToken: () => {\n                return fetch((process.env.REACT_APP_SERVER_URL as string) + '/refresh_token', {\n                    method: 'POST',\n                    credentials: 'include',\n                });\n            },\n            handleFetch: accessToken => {\n                setAccessToken(accessToken);\n            },\n            handleError: err => {\n                console.warn('Your refresh token is invalid. Try to relogin');\n                console.error(err);\n            },\n        }),\n        onError(({ graphQLErrors, networkError }) => {\n            console.log(graphQLErrors);\n            console.log(networkError);\n        }),\n        requestLink,\n        new HttpLink({\n            uri: process.env.REACT_APP_SERVER_URL + '/graphql',\n            credentials: 'include',\n        }),\n    ]),\n    cache,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById('root'),\n);\n","import React, { useState, useEffect } from 'react';\nimport { Routes } from './Routes';\nimport { setAccessToken } from './utils/accessToken';\nimport { Loading } from './components/Loading/Loading';\n\nexport const App: React.FC = () => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch((process.env.REACT_APP_SERVER_URL as string) + '/refresh_token', {\n            method: 'POST',\n            credentials: 'include',\n        }).then(async res => {\n            const { accessToken } = await res.json();\n            setAccessToken(accessToken);\n            setLoading(false);\n        });\n    }, []);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    return <Routes />;\n};\n"],"sourceRoot":""}